{"mappings":"A,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,E,S,E,S,I,E,E,S,E,E,S,E,E,SCaA,MAAM2F,EAAiBlE,SAASC,aAAa,CAAC,oBACxCkE,EAAanE,SAASC,aAAa,CAAC,WACpCmE,EAAepE,SAASC,aAAa,CAAC,aACtCoE,EAAerE,SAASC,aAAa,CAAC,aACtCqE,EAAiBtE,SAASC,aAAa,CAAC,wBAgF9C,eAAe0E,EAAgBpE,CAAC,EAC9B,IAAIC,EAAoB,GAQxB,GAPID,AAAM,IAANA,EACFC,EACEC,KAAKC,KAAK,CAACC,aAAaC,OAAO,CAAC,0BAA4B,EAAE,CACjD,IAANL,GACTC,CAAAA,EACEC,KAAKC,KAAK,CAACC,aAAaC,OAAO,CAAC,0BAA4B,EAAE,AAAF,EAE5DJ,AAA6B,IAA7BA,EAAkBK,MAAM,CAAQ,CAClCmD,AAAAA,EAAAA,GAASlD,MAAM,CAACC,IAAI,CAAC,+BACrB,MACF,CAIA,IAAK,IAAMC,KAFXmD,EAAWlD,SAAS,CAACC,MAAM,CAAC,aAC5BgD,EAAe/C,SAAS,CAAG,GACPX,GAClB,GAAI,CACF,IAAMY,EAAe,MAAMC,AAAAA,CAAAA,EAAAA,EAAAA,eAAAA,AAAAA,EAAgBL,EAAM7B,EAAE,GACnDsF,AAhFN,SAA8BlD,CAAU,EACtC+C,EAAerD,SAAS,CAACO,GAAG,CAAC,uBAC7B,IAAMC,EAAcF,EAAWG,GAAG,CAACC,AAAAA,IACjC,IAAMC,EAAYD,EAAOE,MAAM,CAACH,GAAG,CAACI,AAAAA,GAASA,EAAM3C,EAAE,EAC/C4C,EAAOJ,EAAOK,YAAY,CAC5BL,EAAOK,YAAY,CAACC,KAAK,CAAC,KAC1B,MACJ,MAAOC,AAAAA,CAAAA,EAAAA,EAAAA,SAAAA,AAAAA,EACLP,EAAOxC,EAAE,CACTwC,EAAOQ,WAAW,CAClBR,EAAOS,KAAK,CACZR,GAAY,EAAE,CACdG,EACAJ,EAAOU,YACT,CACF,GACA6B,EAAe5B,kBAAkB,CAAC,YAAab,EAAYc,IAAI,CAAC,IAClE,EA+D2B,CAACnB,EAAa,CACrC,CAAE,MAAOoB,EAAO,CACdC,QAAQD,KAAK,CAAC,uBAAwBA,EACxC,CAEF2B,EAAWlD,SAAS,CAACO,GAAG,CAAC,YAC3B,CAnEAxB,SAAS0C,gBAAgB,CAAC,mBAAoB,KAC5C1C,SAAS2C,IAAI,CAACD,gBAAgB,CAAC,QAAS,SAAUE,CAAC,EACjD,GAAIA,EAAEC,MAAM,EAAID,EAAEC,MAAM,CAAC5B,SAAS,CAAC6B,QAAQ,CAAC,cAAe,CACzD,IAAMC,EAAaH,EAAEC,MAAM,CAACG,WAAW,CACjCC,EAAUL,EAAEC,MAAM,CAACK,OAAO,CAAC,sBAAsBC,OAAO,CAAChE,EAAE,CAC7DiE,EAAuB,EAAE,CACvBC,EAAY,CAAElE,GAAI8D,CAAQ,CAE5BF,AAAe,CAAA,mBAAfA,EACFK,EACE3C,KAAKC,KAAK,CAACC,aAAaC,OAAO,CAAC,0BAA4B,EAAE,CACxC,iBAAfmC,GACTK,CAAAA,EACE3C,KAAKC,KAAK,CAACC,aAAaC,OAAO,CAAC,0BAA4B,EAAE,AAAF,EAGzCwC,EAAqBE,IAAI,CAC9CtC,AAAAA,GAASA,EAAM7B,EAAE,GAAKkE,EAAUlE,EAClC,EAkBE6E,AAAAA,EAAAA,GAASlD,MAAM,CAACC,IAAI,CAAC,iCAfjBgC,AAAe,mBAAfA,GACFK,EAAqBG,IAAI,CAACF,GAC1B1C,aAAa6C,OAAO,CAClB,uBACA/C,KAAKgD,SAAS,CAACL,KAEO,iBAAfL,IACTK,EAAqBG,IAAI,CAACF,GAC1B1C,aAAa6C,OAAO,CAClB,uBACA/C,KAAKgD,SAAS,CAACL,KAGnBY,AAAAA,EAAAA,GAASlD,MAAM,CAAC4C,OAAO,CAAC,mCAI5B,CACF,EACF,GA6BAU,EAAa1B,gBAAgB,CAAC,QAAS,KACrCiC,EAAgB,EAClB,GAEAN,EAAa3B,gBAAgB,CAAC,QAAS,KACrCiC,EAAgB,EAClB,GAEAA,EAAgB","sources":["<anon>","src/indexLibrary.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired787\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired787\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRequire(\"bTcpz\");\nparcelRequire(\"bUb57\");\n\nvar $7rYDH = parcelRequire(\"7rYDH\");\n\nvar $1GAPJ = parcelRequire(\"1GAPJ\");\n\nvar $lQVoc = parcelRequire(\"lQVoc\");\nconst $fe92770d3c5cb14d$var$movieContainer = document.querySelector(\".movie-container\");\nconst $fe92770d3c5cb14d$var$listLoader = document.querySelector(\".loader\");\nconst $fe92770d3c5cb14d$var$libraryListQ = document.querySelector(\".libraryQ\");\nconst $fe92770d3c5cb14d$var$libraryListW = document.querySelector(\".libraryW\");\nconst $fe92770d3c5cb14d$var$listPagination = document.querySelector(\".is-hiddenPagination\");\nlet $fe92770d3c5cb14d$var$currentPage = 1;\nfunction $fe92770d3c5cb14d$var$displayResult(dataResult) {\n    const finalResult = dataResult.map((result)=>{\n        const year = result.release_date ? result.release_date.split(\"-\")[0] : \"N/A\";\n        return (0, $lQVoc.movieCard)(result.id, result.poster_path, result.title, result.genre_ids || [], year);\n    });\n    $fe92770d3c5cb14d$var$movieContainer.innerHTML = finalResult.join(\"\");\n}\nfunction $fe92770d3c5cb14d$var$displayResultLibrary(dataResult) {\n    $fe92770d3c5cb14d$var$listPagination.classList.add(\"is-hiddenPagination\");\n    const finalResult = dataResult.map((result)=>{\n        const genre_ids = result.genres.map((genre)=>genre.id);\n        const year = result.release_date ? result.release_date.split(\"-\") : \"N/A\";\n        return (0, $lQVoc.movieCard)(result.id, result.poster_path, result.title, genre_ids || [], year, result.vote_average);\n    });\n    $fe92770d3c5cb14d$var$movieContainer.insertAdjacentHTML(\"beforeend\", finalResult.join(\"\"));\n}\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    document.body.addEventListener(\"click\", function(e) {\n        if (e.target && e.target.classList.contains(\"libraryBtn\")) {\n            const buttonText = e.target.textContent;\n            const movieId = e.target.closest(\".modalBtnContainer\").dataset.id;\n            let filmotekaWatchMovies = [];\n            const movieData = {\n                id: movieId\n            };\n            if (buttonText === \"Add to watched\") filmotekaWatchMovies = JSON.parse(localStorage.getItem(\"filmotekaWatchMovies\")) || [];\n            else if (buttonText === \"Add to queue\") filmotekaWatchMovies = JSON.parse(localStorage.getItem(\"filmotekaQueueMovies\")) || [];\n            const isMovieWatched = filmotekaWatchMovies.some((movie)=>movie.id === movieData.id);\n            if (!isMovieWatched) {\n                if (buttonText === \"Add to watched\") {\n                    filmotekaWatchMovies.push(movieData);\n                    localStorage.setItem(\"filmotekaWatchMovies\", JSON.stringify(filmotekaWatchMovies));\n                } else if (buttonText === \"Add to queue\") {\n                    filmotekaWatchMovies.push(movieData);\n                    localStorage.setItem(\"filmotekaQueueMovies\", JSON.stringify(filmotekaWatchMovies));\n                }\n                (0, (/*@__PURE__*/$parcel$interopDefault($1GAPJ))).Notify.success(\"Successfully added to the List!\");\n            } else (0, (/*@__PURE__*/$parcel$interopDefault($1GAPJ))).Notify.info(\"This Movie is already added.\");\n        }\n    });\n});\nasync function $fe92770d3c5cb14d$var$watchedListData(x) {\n    let watchedMoviesShow = \"\";\n    if (x === 0) watchedMoviesShow = JSON.parse(localStorage.getItem(\"filmotekaWatchMovies\")) || [];\n    else if (x === 1) watchedMoviesShow = JSON.parse(localStorage.getItem(\"filmotekaQueueMovies\")) || [];\n    if (watchedMoviesShow.length === 0) {\n        (0, (/*@__PURE__*/$parcel$interopDefault($1GAPJ))).Notify.info(\"No watch movies to display.\");\n        return;\n    }\n    $fe92770d3c5cb14d$var$listLoader.classList.remove(\"is-hidden\");\n    $fe92770d3c5cb14d$var$movieContainer.innerHTML = \"\";\n    for (const movie of watchedMoviesShow)try {\n        const searchResult = await (0, $7rYDH.getMovieDetails)(movie.id);\n        $fe92770d3c5cb14d$var$displayResultLibrary([\n            searchResult\n        ]);\n    } catch (error) {\n        console.error(\"Error fetching list:\", error);\n    }\n    $fe92770d3c5cb14d$var$listLoader.classList.add(\"is-hidden\");\n}\n$fe92770d3c5cb14d$var$libraryListQ.addEventListener(\"click\", ()=>{\n    $fe92770d3c5cb14d$var$watchedListData(0);\n});\n$fe92770d3c5cb14d$var$libraryListW.addEventListener(\"click\", ()=>{\n    $fe92770d3c5cb14d$var$watchedListData(1);\n});\n$fe92770d3c5cb14d$var$watchedListData(0);\n\n\n//# sourceMappingURL=library.9aecbcf2.js.map\n","import './js/modal.js';\nimport './js/header.js';\n// import './js/header_library.js';\n\nimport {\n  MovieController,\n  getMoviesPopular,\n  getMovieDetails,\n} from './js/api.js';\nimport { API_KEY, BASE_URL, options } from './js/api.js';\nimport Notiflix from 'notiflix';\nimport { movieCard, movieCardHere } from './js/utils.js';\n\nconst movieContainer = document.querySelector('.movie-container');\nconst listLoader = document.querySelector('.loader');\nconst libraryListQ = document.querySelector('.libraryQ');\nconst libraryListW = document.querySelector('.libraryW');\nconst listPagination = document.querySelector('.is-hiddenPagination');\nlet currentPage = 1;\n\nfunction displayResult(dataResult) {\n  const finalResult = dataResult.map(result => {\n    const year = result.release_date\n      ? result.release_date.split('-')[0]\n      : 'N/A';\n    return movieCard(\n      result.id,\n      result.poster_path,\n      result.title,\n      result.genre_ids || [],\n      year\n    );\n  });\n  movieContainer.innerHTML = finalResult.join('');\n}\n\nfunction displayResultLibrary(dataResult) {\n  listPagination.classList.add('is-hiddenPagination');\n  const finalResult = dataResult.map(result => {\n    const genre_ids = result.genres.map(genre => genre.id);\n    const year = result.release_date\n      ? result.release_date.split('-')\n      : 'N/A';\n    return movieCard(\n      result.id,\n      result.poster_path,\n      result.title,\n      genre_ids|| [],\n      year,\n      result.vote_average\n    );\n  });\n  movieContainer.insertAdjacentHTML('beforeend', finalResult.join(''));\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.body.addEventListener('click', function (e) {\n    if (e.target && e.target.classList.contains('libraryBtn')) {\n      const buttonText = e.target.textContent;\n      const movieId = e.target.closest('.modalBtnContainer').dataset.id;\n      let filmotekaWatchMovies = [];\n      const movieData = { id: movieId };\n\n      if (buttonText === 'Add to watched') {\n        filmotekaWatchMovies =\n          JSON.parse(localStorage.getItem('filmotekaWatchMovies')) || [];\n      } else if (buttonText === 'Add to queue') {\n        filmotekaWatchMovies =\n          JSON.parse(localStorage.getItem('filmotekaQueueMovies')) || [];\n      }\n\n      const isMovieWatched = filmotekaWatchMovies.some(\n        movie => movie.id === movieData.id\n      );\n\n      if (!isMovieWatched) {\n        if (buttonText === 'Add to watched') {\n          filmotekaWatchMovies.push(movieData);\n          localStorage.setItem(\n            'filmotekaWatchMovies',\n            JSON.stringify(filmotekaWatchMovies)\n          );\n        } else if (buttonText === 'Add to queue') {\n          filmotekaWatchMovies.push(movieData);\n          localStorage.setItem(\n            'filmotekaQueueMovies',\n            JSON.stringify(filmotekaWatchMovies)\n          );\n        }\n        Notiflix.Notify.success('Successfully added to the List!');\n      } else {\n        Notiflix.Notify.info('This Movie is already added.');\n      }\n    }\n  });\n});\n\nasync function watchedListData(x) {\n  let watchedMoviesShow = '';\n  if (x === 0) {\n    watchedMoviesShow =\n      JSON.parse(localStorage.getItem('filmotekaWatchMovies')) || [];\n  } else if (x === 1) {\n    watchedMoviesShow =\n      JSON.parse(localStorage.getItem('filmotekaQueueMovies')) || [];\n  }\n  if (watchedMoviesShow.length === 0) {\n    Notiflix.Notify.info('No watch movies to display.');\n    return;\n  }\n\n  listLoader.classList.remove('is-hidden');\n  movieContainer.innerHTML = '';\n  for (const movie of watchedMoviesShow) {\n    try {\n      const searchResult = await getMovieDetails(movie.id);\n      displayResultLibrary([searchResult]);\n    } catch (error) {\n      console.error('Error fetching list:', error);\n    }\n  }\n  listLoader.classList.add('is-hidden');\n}\n\nlibraryListQ.addEventListener('click', () => {\n  watchedListData(0);\n});\n\nlibraryListW.addEventListener('click', () => {\n  watchedListData(1);\n});\n\nwatchedListData(0);\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7rYDH","$1GAPJ","$lQVoc","$fe92770d3c5cb14d$var$movieContainer","document","querySelector","$fe92770d3c5cb14d$var$listLoader","$fe92770d3c5cb14d$var$libraryListQ","$fe92770d3c5cb14d$var$libraryListW","$fe92770d3c5cb14d$var$listPagination","$fe92770d3c5cb14d$var$watchedListData","x","watchedMoviesShow","JSON","parse","localStorage","getItem","length","Notify","info","movie","classList","remove","innerHTML","searchResult","getMovieDetails","$fe92770d3c5cb14d$var$displayResultLibrary","dataResult","add","finalResult","map","result","genre_ids","genres","genre","year","release_date","split","movieCard","poster_path","title","vote_average","insertAdjacentHTML","join","error","console","addEventListener","body","e","target","contains","buttonText","textContent","movieId","closest","dataset","filmotekaWatchMovies","movieData","some","push","setItem","stringify","success","MovieController","getMoviesPopular","API_KEY","BASE_URL","options","Notiflix","movieCardHere","movieContainer","listLoader","libraryListQ","libraryListW","listPagination","currentPage","displayResult","displayResultLibrary","isMovieWatched","watchedListData"],"version":3,"file":"library.9aecbcf2.js.map"}