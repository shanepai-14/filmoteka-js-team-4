{"mappings":"C,A,W,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,E,S,E,S,I,E,E,S,E,E,SEMA,IAAM4G,EAAexF,SAASC,cAAc,CAAC,gBAoD7CwF,AAjDA,iBACE,GAAI,CAoCJ,IAAItF,EAAAA,EAAcC,AAlCFC,AADD,CAAA,MAAMC,AAAAA,CAAAA,EAAAA,EAAAA,QAAAA,AAAAA,GAAnB,EACmBC,OAAO,CAkCCC,GAAG,CAACC,AAAAA,GACxBC,AAAAA,CAAAA,EAAAA,EAAAA,iBAAAA,AAAAA,EACLD,EAAOrB,EAAE,CACTqB,EAAOE,WAAW,CAClBF,EAAOG,KAAK,CACZH,EAAOI,YACT,GAEF2E,EAAa1E,SAAS,CAAGX,EAAYY,IAAI,CAAC,GAzC1C,CAAC,MAAMC,EAAG,CAEV,QAAU,CACK,IAAIC,OAAO,YAAa,CAEnCC,WAAY,CACVC,GAAI,oBACN,EACAC,cAAe,EACfC,aAAc,GACdC,SAAU,CACRC,MAAO,GACT,EACAC,YAAa,CAEX,KAAM,CACJJ,cAAe,CACjB,EACA,IAAK,CACHA,cAAe,CACjB,EACA,EAAG,CACDA,cAAe,CACjB,CACF,CAEF,EACF,CACF,I,I,E,E,S,E,S,I,E,E,SD5BA,IAAMyD,EAAa7E,SAASC,cAAc,CAAC,eACrC6E,EAAc9E,SAASC,cAAc,CAAC,sBACtC8E,EAAiB/E,SAAS4B,aAAa,CAAC,oBACxCoD,EAAahF,SAAS4B,aAAa,CAAC,WACpCqD,EAAiBjF,SAAS4B,aAAa,CAAC,wBAC1CsD,EAAc,EAElB,eAAeC,EAAUlD,EAAO,CAAC,EAC/B+C,EAAW9C,SAAS,CAACC,MAAM,CAAC,aAC5B+C,EAAc,EACdH,EAAejE,SAAS,CAAG,GAC3B,GAAI,CACF,IA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","sources":["<anon>","src/index.js","src/js/upcoming.js"],"sourcesContent":["(function () {\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired787\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired787\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRequire(\"5xtVg\");\nparcelRequire(\"i8Q71\");\n\nvar $b7ONl = parcelRequire(\"b7ONl\");\n\nvar $1RLhk = parcelRequire(\"1RLhk\");\nconst $4c6aab06649ec8ef$var$upcomingList = document.getElementById(\"swiper-list\");\nasync function $4c6aab06649ec8ef$var$upcomingMovies() {\n    try {\n        const data = await (0, $b7ONl.upcoming)();\n        $4c6aab06649ec8ef$var$displayResult(data.results);\n    } catch (e) {} finally{\n        var swiper = new Swiper(\".mySwiper\", {\n            pagination: {\n                el: \".swiper-pagination\"\n            },\n            slidesPerView: 8,\n            spaceBetween: 18,\n            autoplay: {\n                delay: 3000\n            },\n            breakpoints: {\n                // when window width is >= 320px\n                1159: {\n                    slidesPerView: 8\n                },\n                768: {\n                    slidesPerView: 6\n                },\n                1: {\n                    slidesPerView: 2\n                }\n            }\n        });\n    }\n}\nfunction $4c6aab06649ec8ef$var$displayResult(dataResult) {\n    let finalResult = dataResult.map((result)=>{\n        return (0, $1RLhk.movieCardUpcoming)(result.id, result.poster_path, result.title, result.release_date);\n    });\n    $4c6aab06649ec8ef$var$upcomingList.innerHTML = finalResult.join(\"\");\n}\n$4c6aab06649ec8ef$var$upcomingMovies();\n\n\n\nvar $b7ONl = parcelRequire(\"b7ONl\");\nparcelRequire(\"ejkSG\");\n\nvar $1RLhk = parcelRequire(\"1RLhk\");\nconst $b8f9b7833fa37166$var$searchForm = document.getElementById(\"search-form\");\nconst $b8f9b7833fa37166$var$searchInput = document.getElementById(\"input-textbox-home\");\nconst $b8f9b7833fa37166$var$movieContainer = document.querySelector(\".movie-container\");\nconst $b8f9b7833fa37166$var$listLoader = document.querySelector(\".loader\");\nconst $b8f9b7833fa37166$var$listPagination = document.querySelector(\".is-hiddenPagination\");\nlet $b8f9b7833fa37166$var$currentPage = 1;\nasync function $b8f9b7833fa37166$var$movieList(page = 1) {\n    $b8f9b7833fa37166$var$listLoader.classList.remove(\"is-hidden\");\n    $b8f9b7833fa37166$var$currentPage = 1;\n    $b8f9b7833fa37166$var$movieContainer.innerHTML = \"\";\n    try {\n        const queryResult = await (0, $b7ONl.getMoviesPopular)($b8f9b7833fa37166$var$currentPage);\n        console.log(queryResult);\n        $b8f9b7833fa37166$var$displayResult(queryResult.results);\n        $b8f9b7833fa37166$var$setupPagination(queryResult.total_results);\n        $b8f9b7833fa37166$var$listLoader.classList.add(\"is-hidden\");\n    } catch (error) {\n        console.error(\"Error fetching movies:\", error);\n    }\n}\nfunction $b8f9b7833fa37166$var$displayResult(dataResult) {\n    if (dataResult.length === 0) {\n        $b8f9b7833fa37166$var$movieList();\n        return;\n    }\n    let finalResult = dataResult.map((result)=>{\n        let year = result.release_date.split(\"-\");\n        return (0, $1RLhk.movieCard)(result.id, result.poster_path, result.title, result.genre_ids, year, result.vote_average);\n    });\n    $b8f9b7833fa37166$var$movieContainer.innerHTML = finalResult.join(\"\");\n}\nfunction $b8f9b7833fa37166$var$setupPagination(total) {\n    const maxItems = 20000;\n    const limitedTotal = Math.min(total, maxItems);\n    $(\"#pagination\").pagination({\n        dataSource: Array.from({\n            length: limitedTotal\n        }, (_, i)=>i + 1),\n        pageSize: 20,\n        callback: async function(data, pagination) {\n            $b8f9b7833fa37166$var$listPagination.classList.add(\"is-hiddenPagination\");\n            $b8f9b7833fa37166$var$listLoader.classList.remove(\"is-hidden\");\n            $b8f9b7833fa37166$var$currentPage = pagination.pageNumber;\n            const queryResult = await (0, $b7ONl.getMoviesPopular)($b8f9b7833fa37166$var$currentPage);\n            $b8f9b7833fa37166$var$displayResult(queryResult.results);\n            $b8f9b7833fa37166$var$listLoader.classList.add(\"is-hidden\");\n            $b8f9b7833fa37166$var$listPagination.classList.remove(\"is-hiddenPagination\");\n        }\n    });\n}\nfunction $b8f9b7833fa37166$var$setupSearchPagination(total, searchTerm) {\n    const maxItems = 20000;\n    const limitedTotal = Math.min(total, maxItems);\n    $(\"#pagination\").pagination({\n        dataSource: Array.from({\n            length: limitedTotal\n        }, (_, i)=>i + 1),\n        pageSize: 20,\n        callback: async function(data, pagination) {\n            $b8f9b7833fa37166$var$listPagination.classList.add(\"is-hiddenPagination\");\n            $b8f9b7833fa37166$var$listLoader.classList.remove(\"is-hidden\");\n            $b8f9b7833fa37166$var$currentPage = pagination.pageNumber;\n            const queryResult = await (0, $b7ONl.searchMovies)(searchTerm, $b8f9b7833fa37166$var$currentPage);\n            $b8f9b7833fa37166$var$displayResult(queryResult.results);\n            $b8f9b7833fa37166$var$listLoader.classList.add(\"is-hidden\");\n            $b8f9b7833fa37166$var$listPagination.classList.remove(\"is-hiddenPagination\");\n        }\n    });\n}\n$b8f9b7833fa37166$var$searchForm.addEventListener(\"submit\", async (e)=>{\n    e.preventDefault(); // Prevent form submission\n    const searchTerm = $b8f9b7833fa37166$var$searchInput.value.trim();\n    console.log(searchTerm); // Get the search term\n    $b8f9b7833fa37166$var$movieContainer.innerHTML = \"\";\n    let page = 1;\n    if (searchTerm) try {\n        const movies = await (0, $b7ONl.searchMovies)(searchTerm, page); // Call your searchMovies function\n        console.log(movies.results);\n        $b8f9b7833fa37166$var$displayResult(movies.results);\n        $b8f9b7833fa37166$var$setupSearchPagination(movies.total_results, searchTerm);\n    // setupPagination(movies.total_results);\n    } catch (error) {\n        console.error(\"Error searching movies:\", error);\n    }\n});\nwindow.addEventListener(\"load\", (event)=>{\n    $b8f9b7833fa37166$var$movieList();\n});\n\n})();\n//# sourceMappingURL=index.9baaea22.js.map\n","import './js/modal.js';\nimport './js/header.js';\nimport './js/upcoming.js';\n// import './js/header_library.js';\n\nimport {\n  MovieController,\n  getMoviesPopular,\n  getMovieDetails,\n  searchMovies,\n} from './js/api.js';\nimport Notiflix from 'notiflix';\nimport { movieCard, movieCardHere } from './js/utils.js';\nconst searchForm = document.getElementById('search-form');\nconst searchInput = document.getElementById('input-textbox-home');\nconst movieContainer = document.querySelector('.movie-container');\nconst listLoader = document.querySelector('.loader');\nconst listPagination = document.querySelector('.is-hiddenPagination');\nlet currentPage = 1;\n\nasync function movieList(page = 1) {\n  listLoader.classList.remove('is-hidden');\n  currentPage = 1;\n  movieContainer.innerHTML = '';\n  try {\n    const queryResult = await getMoviesPopular(currentPage);\n    console.log(queryResult);\n\n    displayResult(queryResult.results);\n    setupPagination(queryResult.total_results);\n    listLoader.classList.add('is-hidden');\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n  }\n}\n\nfunction displayResult(dataResult) {\n  if(dataResult.length === 0) {\n    movieList();\n    return;\n  }\n  let finalResult = dataResult.map(result => {\n    let year = result.release_date.split('-');\n    return movieCard(\n      result.id,\n      result.poster_path,\n      result.title,\n      result.genre_ids,\n      year,\n      result.vote_average\n    );\n  });\n  movieContainer.innerHTML = finalResult.join('');\n}\n\n\nfunction setupPagination(total) {\n  const maxItems = 1000 * 20;\n  const limitedTotal = Math.min(total, maxItems);\n\n  $('#pagination').pagination({\n    dataSource: Array.from({ length: limitedTotal }, (_, i) => i + 1),\n    pageSize: 20,\n    callback: async function (data, pagination) {\n      listPagination.classList.add('is-hiddenPagination');\n      listLoader.classList.remove('is-hidden');\n      currentPage = pagination.pageNumber;\n      const queryResult = await getMoviesPopular(currentPage);\n      displayResult(queryResult.results);\n      listLoader.classList.add('is-hidden');\n      listPagination.classList.remove('is-hiddenPagination');\n    },\n  });\n}\nfunction setupSearchPagination(total,searchTerm) {\n  const maxItems = 1000 * 20;\n  const limitedTotal = Math.min(total, maxItems);\n\n  $('#pagination').pagination({\n    dataSource: Array.from({ length: limitedTotal }, (_, i) => i + 1),\n    pageSize: 20,\n    callback: async function (data, pagination) {\n      listPagination.classList.add('is-hiddenPagination');\n      listLoader.classList.remove('is-hidden');\n      currentPage = pagination.pageNumber;\n      const queryResult = await searchMovies(searchTerm,currentPage); \n      displayResult(queryResult.results);\n      listLoader.classList.add('is-hidden');\n      listPagination.classList.remove('is-hiddenPagination');\n    },\n  });\n}\nsearchForm.addEventListener('submit', async (e) => {\n  e.preventDefault(); // Prevent form submission\n\n  const searchTerm = searchInput.value.trim(); \n  console.log(searchTerm)// Get the search term\n  movieContainer.innerHTML = '';\n   let page = 1;\n  if (searchTerm) {\n    try {\n      const movies = await searchMovies(searchTerm,page); // Call your searchMovies function\n      console.log(movies.results);\n      displayResult(movies.results);\n      setupSearchPagination(movies.total_results,searchTerm);\n      // setupPagination(movies.total_results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n  \n    }\n  } else {\n\n  }\n});\nwindow.addEventListener(\"load\", (event) => {\n  movieList();\n});\n\n\n\n\n\n","\nimport { upcoming } from \"./api\";\nimport {movieCardUpcoming} from './utils';\n\n\n\nconst upcomingList = document.getElementById('swiper-list');\n\n\nasync function upcomingMovies(){\n  try {\n    const data = await upcoming();\n    displayResult(data.results);\n  }catch(e) {\n\n  } finally {\n    var swiper = new Swiper('.mySwiper', {\n\n      pagination: {\n        el: '.swiper-pagination',\n      },\n      slidesPerView: 8,\n      spaceBetween: 18,\n      autoplay: {\n        delay: 3000,\n      },\n      breakpoints: {\n        // when window width is >= 320px\n        1159: {\n          slidesPerView: 8,\n        },\n        768: {\n          slidesPerView: 6,\n        },\n        1: {\n          slidesPerView: 2,\n        },\n      },\n    \n    });\n  }\n}\n\n\n\nfunction displayResult(dataResult) {\n  let finalResult = dataResult.map(result => {\n    return movieCardUpcoming(\n      result.id,\n      result.poster_path,\n      result.title,\n      result.release_date\n    );\n  });\n  upcomingList.innerHTML = finalResult.join('');\n}\n\n\nupcomingMovies();\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$b7ONl","$1RLhk","$4c6aab06649ec8ef$var$upcomingList","document","getElementById","$4c6aab06649ec8ef$var$upcomingMovies","finalResult","dataResult","data","upcoming","results","map","result","movieCardUpcoming","poster_path","title","release_date","innerHTML","join","e","Swiper","pagination","el","slidesPerView","spaceBetween","autoplay","delay","breakpoints","$b8f9b7833fa37166$var$searchForm","$b8f9b7833fa37166$var$searchInput","$b8f9b7833fa37166$var$movieContainer","querySelector","$b8f9b7833fa37166$var$listLoader","$b8f9b7833fa37166$var$listPagination","$b8f9b7833fa37166$var$currentPage","$b8f9b7833fa37166$var$movieList","page","classList","remove","queryResult","getMoviesPopular","console","log","$b8f9b7833fa37166$var$displayResult","$b8f9b7833fa37166$var$setupPagination","total","limitedTotal","Math","min","$","dataSource","Array","from","length","_","i","pageSize","callback","add","pageNumber","total_results","error","year","split","movieCard","genre_ids","vote_average","addEventListener","preventDefault","searchTerm","value","trim","movies","searchMovies","$b8f9b7833fa37166$var$setupSearchPagination","event","MovieController","getMovieDetails","Notiflix","movieCardHere","searchForm","searchInput","movieContainer","listLoader","listPagination","currentPage","movieList","displayResult","setupPagination","maxItems","setupSearchPagination","upcomingList","upcomingMovies","swiper"],"version":3,"file":"index.9baaea22.js.map"}