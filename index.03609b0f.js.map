{"mappings":"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","sources":["<anon>","src/js/pagination.js"],"sourcesContent":["/*\n * pagination.js 2.6.0\n * A jQuery plugin to provide simple yet fully customisable pagination.\n * https://github.com/superRaytin/paginationjs\n *\n * Homepage: http://pagination.js.org\n *\n * Copyright 2014-2100, superRaytin\n * Released under the MIT license.\n */ (function(global, $) {\n    if (typeof $ === \"undefined\") throwError(\"Pagination requires jQuery.\");\n    var pluginName = \"pagination\";\n    var pluginHookMethod = \"addHook\";\n    var eventPrefix = \"__pagination-\";\n    if ($.fn.pagination) throwError('plugin conflicted, the name \"pagination\" has been taken by another jQuery plugin.');\n    $.fn[pluginName] = function(options) {\n        if (typeof options === \"undefined\") return this;\n        var container = $(this);\n        var attributes = $.extend({}, $.fn[pluginName].defaults, options);\n        var pagination = {\n            initialize: function() {\n                var self = this;\n                // Cache data for current instance\n                if (!container.data(\"pagination\")) container.data(\"pagination\", {});\n                if (self.callHook(\"beforeInit\") === false) return;\n                // Pagination has been initialized, destroy it\n                if (container.data(\"pagination\").initialized) $(\".paginationjs\", container).remove();\n                // Whether to disable Pagination at the initialization\n                self.disabled = !!attributes.disabled;\n                // Model will be passed to the callback function\n                var model = self.model = {\n                    pageRange: attributes.pageRange,\n                    pageSize: attributes.pageSize\n                };\n                // Parse dataSource to find available paging data\n                self.parseDataSource(attributes.dataSource, function(dataSource) {\n                    // Asynchronous mode\n                    self.isAsync = Helpers.isString(dataSource);\n                    if (Helpers.isArray(dataSource)) model.totalNumber = attributes.totalNumber = dataSource.length;\n                    // Asynchronous mode and a 'totalNumberLocator' has been specified\n                    self.isDynamicTotalNumber = self.isAsync && attributes.totalNumberLocator;\n                    var el = self.render(true);\n                    // Add extra className to the pagination element\n                    if (attributes.className) el.addClass(attributes.className);\n                    model.el = el;\n                    // Append / prepend pagination element to the container\n                    container[attributes.position === \"bottom\" ? \"append\" : \"prepend\"](el);\n                    // Bind events\n                    self.observer();\n                    // Mark pagination has been initialized\n                    container.data(\"pagination\").initialized = true;\n                    // Call hook after initialization\n                    self.callHook(\"afterInit\", el);\n                });\n            },\n            render: function(isBoot) {\n                var self = this;\n                var model = self.model;\n                var el = model.el || $('<div class=\"paginationjs\"></div>');\n                var isForced = isBoot !== true;\n                self.callHook(\"beforeRender\", isForced);\n                var currentPage = model.pageNumber || attributes.pageNumber;\n                var pageRange = attributes.pageRange || 0;\n                var totalPage = self.getTotalPage();\n                var rangeStart = currentPage - pageRange;\n                var rangeEnd = currentPage + pageRange;\n                if (rangeEnd > totalPage) {\n                    rangeEnd = totalPage;\n                    rangeStart = totalPage - pageRange * 2;\n                    rangeStart = rangeStart < 1 ? 1 : rangeStart;\n                }\n                if (rangeStart <= 1) {\n                    rangeStart = 1;\n                    rangeEnd = Math.min(pageRange * 2 + 1, totalPage);\n                }\n                el.html(self.generateHTML({\n                    currentPage: currentPage,\n                    pageRange: pageRange,\n                    rangeStart: rangeStart,\n                    rangeEnd: rangeEnd\n                }));\n                // Whether to hide pagination when there is only one page\n                if (attributes.hideOnlyOnePage) el[totalPage <= 1 ? \"hide\" : \"show\"]();\n                self.callHook(\"afterRender\", isForced);\n                return el;\n            },\n            getPageLinkTag: function(index) {\n                var pageLink = attributes.pageLink;\n                return pageLink ? `<a href=\"${pageLink}\">${index}</a>` : `<a>${index}</a>`;\n            },\n            // Generate HTML for page numbers\n            generatePageNumbersHTML: function(args) {\n                var self = this;\n                var currentPage = args.currentPage;\n                var totalPage = self.getTotalPage();\n                var getPageLinkTag = self.getPageLinkTag;\n                var rangeStart = args.rangeStart;\n                var rangeEnd = args.rangeEnd;\n                var html = \"\";\n                var i;\n                var ellipsisText = attributes.ellipsisText;\n                var classPrefix = attributes.classPrefix;\n                var pageClassName = attributes.pageClassName || \"\";\n                var activeClassName = attributes.activeClassName || \"\";\n                var disableClassName = attributes.disableClassName || \"\";\n                // Display all page numbers if page range disabled\n                if (attributes.pageRange === null) {\n                    for(i = 1; i <= totalPage; i++)if (i == currentPage) html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName} ${activeClassName}\" data-num=\"${i}\"><a>${i}</a></li>`;\n                    else html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName}\" data-num=\"${i}\">${getPageLinkTag(i)}</li>`;\n                    return html;\n                }\n                if (rangeStart <= 3) {\n                    for(i = 1; i < rangeStart; i++)if (i == currentPage) html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName} ${activeClassName}\" data-num=\"${i}\"><a>${i}</a></li>`;\n                    else html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName}\" data-num=\"${i}\">${getPageLinkTag(i)}</li>`;\n                } else {\n                    if (!attributes.hideFirstOnEllipsisShow) html += `<li class=\"${classPrefix}-page ${classPrefix}-first J-paginationjs-page ${pageClassName}\" data-num=\"1\">${getPageLinkTag(1)}</li>`;\n                    html += `<li class=\"${classPrefix}-ellipsis ${disableClassName}\"><a>${ellipsisText}</a></li>`;\n                }\n                for(i = rangeStart; i <= rangeEnd; i++)if (i == currentPage) html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName} ${activeClassName}\" data-num=\"${i}\"><a>${i}</a></li>`;\n                else html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName}\" data-num=\"${i}\">${getPageLinkTag(i)}</li>`;\n                if (rangeEnd >= totalPage - 2) for(i = rangeEnd + 1; i <= totalPage; i++)html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName}\" data-num=\"${i}\">${getPageLinkTag(i)}</li>`;\n                else {\n                    html += `<li class=\"${classPrefix}-ellipsis ${disableClassName}\"><a>${ellipsisText}</a></li>`;\n                    if (!attributes.hideLastOnEllipsisShow) html += `<li class=\"${classPrefix}-page ${classPrefix}-last J-paginationjs-page ${pageClassName}\" data-num=\"${totalPage}\">${getPageLinkTag(totalPage)}</li>`;\n                }\n                return html;\n            },\n            // Generate HTML content\n            generateHTML: function(args) {\n                var self = this;\n                var currentPage = args.currentPage;\n                var totalPage = self.getTotalPage();\n                var getPageLinkTag = self.getPageLinkTag;\n                var totalNumber = self.getTotalNumber();\n                var pageSize = attributes.pageSize;\n                var showPrevious = attributes.showPrevious;\n                var showNext = attributes.showNext;\n                var showPageNumbers = attributes.showPageNumbers;\n                var showNavigator = attributes.showNavigator;\n                var showSizeChanger = attributes.showSizeChanger;\n                var sizeChangerOptions = attributes.sizeChangerOptions;\n                var showGoInput = attributes.showGoInput;\n                var showGoButton = attributes.showGoButton;\n                var prevText = attributes.prevText;\n                var nextText = attributes.nextText;\n                var goButtonText = attributes.goButtonText;\n                var classPrefix = attributes.classPrefix;\n                var disableClassName = attributes.disableClassName || \"\";\n                var ulClassName = attributes.ulClassName || \"\";\n                var prevClassName = attributes.prevClassName || \"\";\n                var nextClassName = attributes.nextClassName || \"\";\n                var html = \"\";\n                var sizeSelect = `<select class=\"J-paginationjs-size-select\">`;\n                var goInput = '<input type=\"text\" class=\"J-paginationjs-go-pagenumber\">';\n                var goButton = `<input type=\"button\" class=\"J-paginationjs-go-button\" value=\"${goButtonText}\">`;\n                var formattedString;\n                var formatSizeChanger = typeof attributes.formatSizeChanger === \"function\" ? attributes.formatSizeChanger(currentPage, totalPage, totalNumber) : attributes.formatSizeChanger;\n                var formatNavigator = typeof attributes.formatNavigator === \"function\" ? attributes.formatNavigator(currentPage, totalPage, totalNumber) : attributes.formatNavigator;\n                var formatGoInput = typeof attributes.formatGoInput === \"function\" ? attributes.formatGoInput(goInput, currentPage, totalPage, totalNumber) : attributes.formatGoInput;\n                var formatGoButton = typeof attributes.formatGoButton === \"function\" ? attributes.formatGoButton(goButton, currentPage, totalPage, totalNumber) : attributes.formatGoButton;\n                var autoHidePrevious = typeof attributes.autoHidePrevious === \"function\" ? attributes.autoHidePrevious() : attributes.autoHidePrevious;\n                var autoHideNext = typeof attributes.autoHideNext === \"function\" ? attributes.autoHideNext() : attributes.autoHideNext;\n                var header = typeof attributes.header === \"function\" ? attributes.header(currentPage, totalPage, totalNumber) : attributes.header;\n                var footer = typeof attributes.footer === \"function\" ? attributes.footer(currentPage, totalPage, totalNumber) : attributes.footer;\n                // Prepend extra contents to the pagination buttons\n                if (header) {\n                    formattedString = self.replaceVariables(header, {\n                        currentPage: currentPage,\n                        totalPage: totalPage,\n                        totalNumber: totalNumber\n                    });\n                    html += formattedString;\n                }\n                // Whether to display navigator\n                if (showNavigator) {\n                    if (formatNavigator) {\n                        formattedString = self.replaceVariables(formatNavigator, {\n                            currentPage: currentPage,\n                            totalPage: totalPage,\n                            totalNumber: totalNumber,\n                            rangeStart: (currentPage - 1) * pageSize + 1,\n                            rangeEnd: Math.min(currentPage * pageSize, totalNumber)\n                        });\n                        html += `<div class=\"${classPrefix}-nav J-paginationjs-nav\">${formattedString}</div>`;\n                    }\n                }\n                if (showPrevious || showPageNumbers || showNext) {\n                    html += '<div class=\"paginationjs-pages\">';\n                    if (ulClassName) html += `<ul class=\"${ulClassName}\">`;\n                    else html += \"<ul>\";\n                    // Whether to display Previous button\n                    if (showPrevious) {\n                        if (currentPage <= 1) {\n                            if (!autoHidePrevious) html += `<li class=\"${classPrefix}-prev ${disableClassName} ${prevClassName}\"><a>${prevText}</a></li>`;\n                        } else html += `<li class=\"${classPrefix}-prev J-paginationjs-previous ${prevClassName}\" data-num=\"${currentPage - 1}\" title=\"Previous page\">${getPageLinkTag(prevText)}</li>`;\n                    }\n                    // Whether to display page numbers\n                    if (showPageNumbers) html += self.generatePageNumbersHTML(args);\n                    // Whether to display Next button\n                    if (showNext) {\n                        if (currentPage >= totalPage) {\n                            if (!autoHideNext) html += `<li class=\"${classPrefix}-next ${disableClassName} ${nextClassName}\"><a>${nextText}</a></li>`;\n                        } else html += `<li class=\"${classPrefix}-next J-paginationjs-next ${nextClassName}\" data-num=\"${currentPage + 1}\" title=\"Next page\">${getPageLinkTag(nextText)}</li>`;\n                    }\n                    html += `</ul></div>`;\n                }\n                if (showSizeChanger) {\n                    if (Helpers.isArray(sizeChangerOptions)) {\n                        if (sizeChangerOptions.indexOf(pageSize) === -1) {\n                            sizeChangerOptions.unshift(pageSize);\n                            sizeChangerOptions.sort((a, b)=>a - b);\n                        }\n                        for(let i = 0; i < sizeChangerOptions.length; i++)sizeSelect += `<option value=\"${sizeChangerOptions[i]}\"${sizeChangerOptions[i] === pageSize ? \" selected\" : \"\"}>${sizeChangerOptions[i]} / page</option>`;\n                        sizeSelect += `</select>`;\n                        formattedString = sizeSelect;\n                        if (formatSizeChanger) formattedString = self.replaceVariables(formatSizeChanger, {\n                            length: sizeSelect,\n                            total: totalNumber\n                        });\n                        html += `<div class=\"paginationjs-size-changer\">${formattedString}</div>`;\n                    }\n                }\n                // Whether to display Go input\n                if (showGoInput) {\n                    if (formatGoInput) {\n                        formattedString = self.replaceVariables(formatGoInput, {\n                            currentPage: currentPage,\n                            totalPage: totalPage,\n                            totalNumber: totalNumber,\n                            input: goInput\n                        });\n                        html += `<div class=\"${classPrefix}-go-input\">${formattedString}</div>`;\n                    }\n                }\n                // Whether to display Go button\n                if (showGoButton) {\n                    if (formatGoButton) {\n                        formattedString = self.replaceVariables(formatGoButton, {\n                            currentPage: currentPage,\n                            totalPage: totalPage,\n                            totalNumber: totalNumber,\n                            button: goButton\n                        });\n                        html += `<div class=\"${classPrefix}-go-button\">${formattedString}</div>`;\n                    }\n                }\n                // Append extra contents to the pagination buttons\n                if (footer) {\n                    formattedString = self.replaceVariables(footer, {\n                        currentPage: currentPage,\n                        totalPage: totalPage,\n                        totalNumber: totalNumber\n                    });\n                    html += formattedString;\n                }\n                return html;\n            },\n            // dataSource is a request URL and a 'totalNumberLocator' function specified\n            // execute it to find out 'totalNumber' from the response\n            findTotalNumberFromRemoteResponse: function(response) {\n                var self = this;\n                self.model.totalNumber = attributes.totalNumberLocator(response);\n            },\n            // Go to the specified page\n            go: function(number, callback) {\n                var self = this;\n                var model = self.model;\n                if (self.disabled) return;\n                var pageNumber = number;\n                pageNumber = parseInt(pageNumber);\n                if (!pageNumber || pageNumber < 1) return;\n                var pageSize = attributes.pageSize;\n                var totalNumber = self.getTotalNumber();\n                var totalPage = self.getTotalPage();\n                if (totalNumber > 0 && pageNumber > totalPage) return;\n                // Pick paging data in synchronous mode\n                if (!self.isAsync) {\n                    render(self.getPagingData(pageNumber));\n                    return;\n                }\n                var postData = {};\n                var alias = attributes.alias || {};\n                var pageSizeName = alias.pageSize ? alias.pageSize : \"pageSize\";\n                var pageNumberName = alias.pageNumber ? alias.pageNumber : \"pageNumber\";\n                postData[pageSizeName] = pageSize;\n                postData[pageNumberName] = pageNumber;\n                var ajaxParams = typeof attributes.ajax === \"function\" ? attributes.ajax() : attributes.ajax;\n                // If the pageNumber's value starts with 0 via Ajax\n                if (ajaxParams && ajaxParams.pageNumberStartWithZero) postData[pageNumberName] = pageNumber - 1;\n                var formatAjaxParams = {\n                    type: \"get\",\n                    cache: false,\n                    data: {},\n                    contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n                    dataType: \"json\",\n                    async: true\n                };\n                $.extend(true, formatAjaxParams, ajaxParams);\n                $.extend(formatAjaxParams.data, postData);\n                formatAjaxParams.url = attributes.dataSource;\n                formatAjaxParams.success = function(response) {\n                    try {\n                        self.model.originalResponse = response;\n                        if (self.isDynamicTotalNumber) self.findTotalNumberFromRemoteResponse(response);\n                        else self.model.totalNumber = attributes.totalNumber;\n                        var finalData = self.filterDataWithLocator(response);\n                        render(finalData);\n                    } catch (e) {\n                        if (typeof attributes.onError === \"function\") attributes.onError(e, \"ajaxSuccessHandlerError\");\n                        else throw e;\n                    }\n                };\n                formatAjaxParams.error = function(jqXHR, textStatus, errorThrown) {\n                    attributes.formatAjaxError && attributes.formatAjaxError(jqXHR, textStatus, errorThrown);\n                    self.enable();\n                };\n                self.disable();\n                if (attributes.ajaxFunction) attributes.ajaxFunction(formatAjaxParams);\n                else $.ajax(formatAjaxParams);\n                function render(data) {\n                    if (self.callHook(\"beforePaging\", pageNumber) === false) return false;\n                    // Pagination direction\n                    model.direction = typeof model.pageNumber === \"undefined\" ? 0 : pageNumber > model.pageNumber ? 1 : -1;\n                    model.pageNumber = pageNumber;\n                    self.render();\n                    if (self.disabled && self.isAsync) // enable pagination\n                    self.enable();\n                    // cache model data\n                    container.data(\"pagination\").model = model;\n                    // format result data before callback invoked\n                    if (attributes.formatResult) {\n                        var cloneData = $.extend(true, [], data);\n                        if (!Helpers.isArray(data = attributes.formatResult(cloneData))) data = cloneData;\n                    }\n                    container.data(\"pagination\").currentPageData = data;\n                    self.doCallback(data, callback);\n                    self.callHook(\"afterPaging\", pageNumber);\n                    if (pageNumber == 1) self.callHook(\"afterIsFirstPage\");\n                    else if (pageNumber == self.getTotalPage()) self.callHook(\"afterIsLastPage\");\n                }\n            },\n            doCallback: function(data, customCallback) {\n                var self = this;\n                var model = self.model;\n                if (typeof customCallback === \"function\") customCallback(data, model);\n                else if (typeof attributes.callback === \"function\") attributes.callback(data, model);\n            },\n            destroy: function() {\n                if (this.callHook(\"beforeDestroy\") === false) return;\n                this.model.el.remove();\n                container.off();\n                // Remove style element\n                $(\"#paginationjs-style\").remove();\n                this.callHook(\"afterDestroy\");\n            },\n            previous: function(callback) {\n                this.go(this.model.pageNumber - 1, callback);\n            },\n            next: function(callback) {\n                this.go(this.model.pageNumber + 1, callback);\n            },\n            disable: function() {\n                var self = this;\n                var source = self.isAsync ? \"async\" : \"sync\";\n                if (self.callHook(\"beforeDisable\", source) === false) return;\n                self.disabled = true;\n                self.model.disabled = true;\n                self.callHook(\"afterDisable\", source);\n            },\n            enable: function() {\n                var self = this;\n                var source = self.isAsync ? \"async\" : \"sync\";\n                if (self.callHook(\"beforeEnable\", source) === false) return;\n                self.disabled = false;\n                self.model.disabled = false;\n                self.callHook(\"afterEnable\", source);\n            },\n            refresh: function(callback) {\n                this.go(this.model.pageNumber, callback);\n            },\n            show: function() {\n                var self = this;\n                if (self.model.el.is(\":visible\")) return;\n                self.model.el.show();\n            },\n            hide: function() {\n                var self = this;\n                if (!self.model.el.is(\":visible\")) return;\n                self.model.el.hide();\n            },\n            // Replace variables for template string\n            replaceVariables: function(template, variables) {\n                var formattedString;\n                for(var key in variables){\n                    var value = variables[key];\n                    var regexp = new RegExp(\"<%=\\\\s*\" + key + \"\\\\s*%>\", \"img\");\n                    formattedString = (formattedString || template).replace(regexp, value);\n                }\n                return formattedString;\n            },\n            getPagingData: function(number) {\n                var pageSize = attributes.pageSize;\n                var dataSource = attributes.dataSource;\n                var totalNumber = this.getTotalNumber();\n                var start = pageSize * (number - 1) + 1;\n                var end = Math.min(number * pageSize, totalNumber);\n                return dataSource.slice(start - 1, end);\n            },\n            getTotalNumber: function() {\n                return this.model.totalNumber || attributes.totalNumber || 0;\n            },\n            getTotalPage: function() {\n                return Math.ceil(this.getTotalNumber() / attributes.pageSize);\n            },\n            getLocator: function(locator) {\n                var result;\n                if (typeof locator === \"string\") result = locator;\n                else if (typeof locator === \"function\") result = locator();\n                else throwError('\"locator\" is incorrect. Expect string or function type.');\n                return result;\n            },\n            // Filter data with \"locator\"\n            filterDataWithLocator: function(dataSource) {\n                var locator = this.getLocator(attributes.locator);\n                var filteredData;\n                // Datasource is an Object, use \"locator\" to locate available data\n                if (Helpers.isObject(dataSource)) {\n                    try {\n                        $.each(locator.split(\".\"), function(index, item) {\n                            filteredData = (filteredData ? filteredData : dataSource)[item];\n                        });\n                    } catch (e) {\n                    // ignore\n                    }\n                    if (!filteredData) throwError(\"dataSource.\" + locator + \" is undefined.\");\n                    else if (!Helpers.isArray(filteredData)) throwError(\"dataSource.\" + locator + \" should be an Array.\");\n                }\n                return filteredData || dataSource;\n            },\n            parseDataSource: function(dataSource, callback) {\n                var self = this;\n                if (Helpers.isObject(dataSource)) callback(attributes.dataSource = self.filterDataWithLocator(dataSource));\n                else if (Helpers.isArray(dataSource)) callback(attributes.dataSource = dataSource);\n                else if (typeof dataSource === \"function\") attributes.dataSource(function(data) {\n                    if (!Helpers.isArray(data)) throwError('The parameter of \"done\" Function should be an Array.');\n                    self.parseDataSource.call(self, data, callback);\n                });\n                else if (typeof dataSource === \"string\") {\n                    if (/^https?|file:/.test(dataSource)) attributes.ajaxDataType = \"jsonp\";\n                    callback(dataSource);\n                } else throwError(\"Unexpected dataSource type\");\n            },\n            callHook: function(hook) {\n                var paginationData = container.data(\"pagination\") || {};\n                var result;\n                var args = Array.prototype.slice.apply(arguments);\n                args.shift();\n                if (attributes[hook] && typeof attributes[hook] === \"function\") {\n                    if (attributes[hook].apply(global, args) === false) result = false;\n                }\n                if (paginationData.hooks && paginationData.hooks[hook]) $.each(paginationData.hooks[hook], function(index, item) {\n                    if (item.apply(global, args) === false) result = false;\n                });\n                return result !== false;\n            },\n            observer: function() {\n                var self = this;\n                var el = self.model.el;\n                // Go to specified page number\n                container.on(eventPrefix + \"go\", function(event, pageNumber, done) {\n                    if (typeof pageNumber === \"string\") pageNumber = parseInt(pageNumber.trim());\n                    if (!pageNumber) return;\n                    if (typeof pageNumber !== \"number\") throwError('\"pageNumber\" is incorrect. (Number)');\n                    self.go(pageNumber, done);\n                });\n                // Page number button click listener\n                el.on(\"click\", \".J-paginationjs-page\", function(event) {\n                    var current = $(event.currentTarget);\n                    var pageNumber = current.attr(\"data-num\").trim();\n                    if (!pageNumber || current.hasClass(attributes.disableClassName) || current.hasClass(attributes.activeClassName)) return;\n                    if (self.callHook(\"beforePageOnClick\", event, pageNumber) === false) return false;\n                    self.go(pageNumber);\n                    self.callHook(\"afterPageOnClick\", event, pageNumber);\n                    if (!attributes.pageLink) return false;\n                });\n                // Previous button click listener\n                el.on(\"click\", \".J-paginationjs-previous\", function(event) {\n                    var current = $(event.currentTarget);\n                    var pageNumber = current.attr(\"data-num\").trim();\n                    if (!pageNumber || current.hasClass(attributes.disableClassName)) return;\n                    if (self.callHook(\"beforePreviousOnClick\", event, pageNumber) === false) return false;\n                    self.go(pageNumber);\n                    self.callHook(\"afterPreviousOnClick\", event, pageNumber);\n                    if (!attributes.pageLink) return false;\n                });\n                // Next button click listener\n                el.on(\"click\", \".J-paginationjs-next\", function(event) {\n                    var current = $(event.currentTarget);\n                    var pageNumber = current.attr(\"data-num\").trim();\n                    if (!pageNumber || current.hasClass(attributes.disableClassName)) return;\n                    if (self.callHook(\"beforeNextOnClick\", event, pageNumber) === false) return false;\n                    self.go(pageNumber);\n                    self.callHook(\"afterNextOnClick\", event, pageNumber);\n                    if (!attributes.pageLink) return false;\n                });\n                // Go button click listener\n                el.on(\"click\", \".J-paginationjs-go-button\", function(event) {\n                    var pageNumber = $(\".J-paginationjs-go-pagenumber\", el).val();\n                    if (self.callHook(\"beforeGoButtonOnClick\", event, pageNumber) === false) return false;\n                    container.trigger(eventPrefix + \"go\", pageNumber);\n                    self.callHook(\"afterGoButtonOnClick\", event, pageNumber);\n                });\n                // go input enter keyup listener\n                el.on(\"keyup\", \".J-paginationjs-go-pagenumber\", function(event) {\n                    if (event.which === 13) {\n                        var pageNumber = $(event.currentTarget).val();\n                        if (self.callHook(\"beforeGoInputOnEnter\", event, pageNumber) === false) return false;\n                        container.trigger(eventPrefix + \"go\", pageNumber);\n                        // Maintain the cursor\n                        $(\".J-paginationjs-go-pagenumber\", el).focus();\n                        self.callHook(\"afterGoInputOnEnter\", event, pageNumber);\n                    }\n                });\n                el.on(\"change\", \".J-paginationjs-size-select\", function(event) {\n                    var current = $(event.currentTarget);\n                    var size = parseInt(current.val());\n                    var currentPage = self.model.pageNumber || attributes.pageNumber;\n                    if (typeof size !== \"number\") return;\n                    if (self.callHook(\"beforeSizeSelectorChange\", event, size) === false) return false;\n                    attributes.pageSize = size;\n                    self.model.pageSize = size;\n                    self.model.totalPage = self.getTotalPage();\n                    if (currentPage > self.model.totalPage) currentPage = self.model.totalPage;\n                    self.go(currentPage);\n                    self.callHook(\"afterSizeSelectorChange\", event, size);\n                    if (!attributes.pageLink) return false;\n                });\n                // Previous page\n                container.on(eventPrefix + \"previous\", function(event, done) {\n                    self.previous(done);\n                });\n                // Next page\n                container.on(eventPrefix + \"next\", function(event, done) {\n                    self.next(done);\n                });\n                // Disable\n                container.on(eventPrefix + \"disable\", function() {\n                    self.disable();\n                });\n                // Enable\n                container.on(eventPrefix + \"enable\", function() {\n                    self.enable();\n                });\n                // Refresh\n                container.on(eventPrefix + \"refresh\", function(event, done) {\n                    self.refresh(done);\n                });\n                // Show\n                container.on(eventPrefix + \"show\", function() {\n                    self.show();\n                });\n                // Hide\n                container.on(eventPrefix + \"hide\", function() {\n                    self.hide();\n                });\n                // Destroy\n                container.on(eventPrefix + \"destroy\", function() {\n                    self.destroy();\n                });\n                // Whether to load the default page\n                var validTotalPage = Math.max(self.getTotalPage(), 1);\n                var defaultPageNumber = attributes.pageNumber;\n                // Default pageNumber should be 1 when totalNumber is dynamic\n                if (self.isDynamicTotalNumber) {\n                    if (attributes.resetPageNumberOnInit) defaultPageNumber = 1;\n                }\n                if (attributes.triggerPagingOnInit) container.trigger(eventPrefix + \"go\", Math.min(defaultPageNumber, validTotalPage));\n            }\n        };\n        // Pagination has been initialized\n        if (container.data(\"pagination\") && container.data(\"pagination\").initialized === true) {\n            // Handle events\n            if (isNumeric(options)) {\n                // eg: container.pagination(5)\n                container.trigger.call(this, eventPrefix + \"go\", options, arguments[1]);\n                return this;\n            } else if (typeof options === \"string\") {\n                var args = Array.prototype.slice.apply(arguments);\n                args[0] = eventPrefix + args[0];\n                switch(options){\n                    case \"previous\":\n                    case \"next\":\n                    case \"go\":\n                    case \"disable\":\n                    case \"enable\":\n                    case \"refresh\":\n                    case \"show\":\n                    case \"hide\":\n                    case \"destroy\":\n                        container.trigger.apply(this, args);\n                        break;\n                    case \"getSelectedPageNum\":\n                    case \"getCurrentPageNum\":\n                        if (container.data(\"pagination\").model) return container.data(\"pagination\").model.pageNumber;\n                        else return container.data(\"pagination\").attributes.pageNumber;\n                    case \"getTotalPage\":\n                        return Math.ceil(container.data(\"pagination\").model.totalNumber / container.data(\"pagination\").model.pageSize);\n                    case \"getSelectedPageData\":\n                    case \"getCurrentPageData\":\n                        return container.data(\"pagination\").currentPageData;\n                    // Whether pagination has been disabled\n                    case \"isDisabled\":\n                        return container.data(\"pagination\").model.disabled === true;\n                    default:\n                        throwError(\"Unknown action: \" + options);\n                }\n                return this;\n            } else // Uninstall the old instance before initializing a new one\n            uninstallPlugin(container);\n        } else if (!Helpers.isObject(options)) throwError(\"Illegal options\");\n        // Check parameters\n        parameterChecker(attributes);\n        pagination.initialize();\n        return this;\n    };\n    // Instance defaults\n    $.fn[pluginName].defaults = {\n        // Data source\n        // Array | String | Function | Object\n        //dataSource: '',\n        // String | Function\n        //locator: 'data',\n        // Function\n        //totalNumberLocator: function() {},\n        // Total number of data items\n        totalNumber: 0,\n        // Default page number\n        pageNumber: 1,\n        // Number of data items per page\n        pageSize: 10,\n        // Page range (pages around current page)\n        pageRange: 2,\n        // Whether to display the 'Previous' button\n        showPrevious: true,\n        // Whether to display the 'Next' button\n        showNext: true,\n        // Whether to display the page buttons\n        showPageNumbers: true,\n        showNavigator: false,\n        // Whether to display the 'Go' input\n        showGoInput: false,\n        // Whether to display the 'Go' button\n        showGoButton: false,\n        showSizeChanger: false,\n        sizeChangerOptions: [\n            10,\n            20,\n            50,\n            100\n        ],\n        // Page link\n        pageLink: \"\",\n        // 'Previous' text\n        prevText: \"&lsaquo;\",\n        // 'Next' text\n        nextText: \"&rsaquo;\",\n        // Ellipsis text\n        ellipsisText: \"...\",\n        // 'Go' button text\n        goButtonText: \"Go\",\n        // Additional class name(s) for the Pagination container\n        //className: '',\n        classPrefix: \"paginationjs\",\n        activeClassName: \"active\",\n        // class name when disabled\n        disableClassName: \"disabled\",\n        //ulClassName: '',\n        //pageClassName: '',\n        //prevClassName: '',\n        //nextClassName: '',\n        formatNavigator: \"Total <%= totalNumber %> items\",\n        formatGoInput: \"<%= input %>\",\n        formatGoButton: \"<%= button %>\",\n        // position in the container\n        position: \"bottom\",\n        // Auto hide previous button when current page is the first\n        autoHidePrevious: false,\n        // Auto hide next button when current page is the last\n        autoHideNext: false,\n        //header: '',\n        //footer: '',\n        //alias: {},\n        // Whether to trigger pagination at initialization\n        triggerPagingOnInit: true,\n        // Whether to reset page number at initialization, it works only if dataSource is a URL and totalNumberLocator is specified\n        resetPageNumberOnInit: true,\n        // Whether to hide pagination when less than one page\n        hideOnlyOnePage: false,\n        hideFirstOnEllipsisShow: false,\n        hideLastOnEllipsisShow: false,\n        // Customize item's innerHTML\n        callback: function() {}\n    };\n    // Hook register\n    $.fn[pluginHookMethod] = function(hook, callback) {\n        if (arguments.length < 2) throwError(\"Expect 2 arguments at least.\");\n        if (typeof callback !== \"function\") throwError(\"callback should be a function.\");\n        var container = $(this);\n        var paginationData = container.data(\"pagination\");\n        if (!paginationData) {\n            container.data(\"pagination\", {});\n            paginationData = container.data(\"pagination\");\n        }\n        !paginationData.hooks && (paginationData.hooks = {});\n        //paginationData.hooks[hook] = callback;\n        paginationData.hooks[hook] = paginationData.hooks[hook] || [];\n        paginationData.hooks[hook].push(callback);\n    };\n    // Static method\n    $[pluginName] = function(selector, options) {\n        if (arguments.length < 2) throwError(\"Requires two parameters.\");\n        var container;\n        // 'selector' is a jQuery object\n        if (typeof selector !== \"string\" && selector instanceof jQuery) container = selector;\n        else container = $(selector);\n        if (!container.length) return;\n        container.pagination(options);\n        return container;\n    };\n    // ============================================================\n    // helpers\n    // ============================================================\n    var Helpers = {};\n    // Throw error\n    function throwError(content) {\n        throw new Error(\"Pagination: \" + content);\n    }\n    // Check parameters\n    function parameterChecker(args) {\n        if (!args.dataSource) throwError('\"dataSource\" is required.');\n        if (typeof args.dataSource === \"string\") {\n            if (args.totalNumberLocator === undefined) {\n                if (args.totalNumber === undefined) throwError('\"totalNumber\" is required.');\n                else if (!isNumeric(args.totalNumber)) throwError('\"totalNumber\" is incorrect. Expect numberic type');\n            } else if (typeof args.totalNumberLocator !== \"function\") throwError('\"totalNumberLocator\" should be a Function.');\n        } else if (Helpers.isObject(args.dataSource)) {\n            if (typeof args.locator === \"undefined\") throwError('\"dataSource\" is an Object, please specify a \"locator\".');\n            else if (typeof args.locator !== \"string\" && typeof args.locator !== \"function\") throwError(\"\" + args.locator + \" is incorrect. Expect string or function type\");\n        }\n        if (args.formatResult !== undefined && typeof args.formatResult !== \"function\") throwError('\"formatResult\" should be a Function.');\n        if (args.onError !== undefined && typeof args.onError !== \"function\") throwError('\"onError\" should be a Function.');\n    }\n    // uninstall plugin\n    function uninstallPlugin(target) {\n        var events = [\n            \"go\",\n            \"previous\",\n            \"next\",\n            \"disable\",\n            \"enable\",\n            \"refresh\",\n            \"show\",\n            \"hide\",\n            \"destroy\"\n        ];\n        // off all events\n        $.each(events, function(index, value) {\n            target.off(eventPrefix + value);\n        });\n        // reset pagination data\n        target.data(\"pagination\", {});\n        // remove pagination element\n        $(\".paginationjs\", target).remove();\n    }\n    // Object type detection\n    function getObjectType(object, tmp) {\n        return ((tmp = typeof object) == \"object\" ? object == null && \"null\" || Object.prototype.toString.call(object).slice(8, -1) : tmp).toLowerCase();\n    }\n    function isNumeric(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n    $.each([\n        \"Object\",\n        \"Array\",\n        \"String\"\n    ], function(index, name) {\n        Helpers[\"is\" + name] = function(object) {\n            return getObjectType(object) === name.toLowerCase();\n        };\n    });\n    /*\n   * export via AMD or CommonJS\n   * */ if (typeof define === \"function\" && define.amd) define(function() {\n        return $;\n    });\n})(this, window.jQuery);\n\n//# sourceMappingURL=index.03609b0f.js.map\n","/*\n * pagination.js 2.6.0\n * A jQuery plugin to provide simple yet fully customisable pagination.\n * https://github.com/superRaytin/paginationjs\n *\n * Homepage: http://pagination.js.org\n *\n * Copyright 2014-2100, superRaytin\n * Released under the MIT license.\n */\n\n(function(global, $) {\n\n  if (typeof $ === 'undefined') {\n    throwError('Pagination requires jQuery.');\n  }\n\n  var pluginName = 'pagination';\n\n  var pluginHookMethod = 'addHook';\n\n  var eventPrefix = '__pagination-';\n\n  if ($.fn.pagination) {\n    throwError('plugin conflicted, the name \"pagination\" has been taken by another jQuery plugin.');\n  }\n\n  $.fn[pluginName] = function(options) {\n\n    if (typeof options === 'undefined') {\n      return this;\n    }\n\n    var container = $(this);\n\n    var attributes = $.extend({}, $.fn[pluginName].defaults, options);\n\n    var pagination = {\n\n      initialize: function() {\n        var self = this;\n\n        // Cache data for current instance\n        if (!container.data('pagination')) {\n          container.data('pagination', {});\n        }\n\n        if (self.callHook('beforeInit') === false) return;\n\n        // Pagination has been initialized, destroy it\n        if (container.data('pagination').initialized) {\n          $('.paginationjs', container).remove();\n        }\n\n        // Whether to disable Pagination at the initialization\n        self.disabled = !!attributes.disabled;\n\n        // Model will be passed to the callback function\n        var model = self.model = {\n          pageRange: attributes.pageRange,\n          pageSize: attributes.pageSize\n        };\n\n        // Parse dataSource to find available paging data\n        self.parseDataSource(attributes.dataSource, function(dataSource) {\n\n          // Asynchronous mode\n          self.isAsync = Helpers.isString(dataSource);\n          if (Helpers.isArray(dataSource)) {\n            model.totalNumber = attributes.totalNumber = dataSource.length;\n          }\n\n          // Asynchronous mode and a 'totalNumberLocator' has been specified\n          self.isDynamicTotalNumber = self.isAsync && attributes.totalNumberLocator;\n\n          var el = self.render(true);\n\n          // Add extra className to the pagination element\n            if (attributes.className) {\n            el.addClass(attributes.className);\n          }\n\n          model.el = el;\n\n          // Append / prepend pagination element to the container\n          container[attributes.position === 'bottom' ? 'append' : 'prepend'](el);\n\n          // Bind events\n          self.observer();\n\n          // Mark pagination has been initialized\n          container.data('pagination').initialized = true;\n\n          // Call hook after initialization\n          self.callHook('afterInit', el);\n        });\n      },\n\n      render: function(isBoot) {\n        var self = this;\n        var model = self.model;\n        var el = model.el || $('<div class=\"paginationjs\"></div>');\n        var isForced = isBoot !== true;\n\n        self.callHook('beforeRender', isForced);\n\n        var currentPage = model.pageNumber || attributes.pageNumber;\n        var pageRange = attributes.pageRange || 0;\n        var totalPage = self.getTotalPage();\n\n        var rangeStart = currentPage - pageRange;\n        var rangeEnd = currentPage + pageRange;\n\n        if (rangeEnd > totalPage) {\n          rangeEnd = totalPage;\n          rangeStart = totalPage - pageRange * 2;\n          rangeStart = rangeStart < 1 ? 1 : rangeStart;\n        }\n\n        if (rangeStart <= 1) {\n          rangeStart = 1;\n          rangeEnd = Math.min(pageRange * 2 + 1, totalPage);\n        }\n\n        el.html(self.generateHTML({\n          currentPage: currentPage,\n          pageRange: pageRange,\n          rangeStart: rangeStart,\n          rangeEnd: rangeEnd\n        }));\n\n        // Whether to hide pagination when there is only one page\n        if (attributes.hideOnlyOnePage) {\n          el[totalPage <= 1 ? 'hide' : 'show']();\n        }\n\n        self.callHook('afterRender', isForced);\n\n        return el;\n      },\n\n      getPageLinkTag: function(index) {\n        var pageLink = attributes.pageLink;\n        return pageLink ? `<a href=\"${pageLink}\">${index}</a>` : `<a>${index}</a>`;\n      },\n\n      // Generate HTML for page numbers\n      generatePageNumbersHTML: function(args) {\n        var self = this;\n        var currentPage = args.currentPage;\n        var totalPage = self.getTotalPage();\n        var getPageLinkTag = self.getPageLinkTag;\n        var rangeStart = args.rangeStart;\n        var rangeEnd = args.rangeEnd;\n        var html = '';\n        var i;\n\n        var ellipsisText = attributes.ellipsisText;\n\n        var classPrefix = attributes.classPrefix;\n        var pageClassName = attributes.pageClassName || '';\n        var activeClassName = attributes.activeClassName || '';\n        var disableClassName = attributes.disableClassName || '';\n\n        // Display all page numbers if page range disabled\n        if (attributes.pageRange === null) {\n          for (i = 1; i <= totalPage; i++) {\n            if (i == currentPage) {\n              html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName} ${activeClassName}\" data-num=\"${i}\"><a>${i}</a></li>`;\n            } else {\n              html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName}\" data-num=\"${i}\">${getPageLinkTag(i)}</li>`;\n            }\n          }\n          return html;\n        }\n\n        if (rangeStart <= 3) {\n          for (i = 1; i < rangeStart; i++) {\n            if (i == currentPage) {\n              html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName} ${activeClassName}\" data-num=\"${i}\"><a>${i}</a></li>`;\n            } else {\n              html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName}\" data-num=\"${i}\">${getPageLinkTag(i)}</li>`;\n            }\n          }\n        } else {\n          if (!attributes.hideFirstOnEllipsisShow) {\n            html += `<li class=\"${classPrefix}-page ${classPrefix}-first J-paginationjs-page ${pageClassName}\" data-num=\"1\">${getPageLinkTag(1)}</li>`;\n          }\n          html += `<li class=\"${classPrefix}-ellipsis ${disableClassName}\"><a>${ellipsisText}</a></li>`;\n        }\n\n        for (i = rangeStart; i <= rangeEnd; i++) {\n          if (i == currentPage) {\n            html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName} ${activeClassName}\" data-num=\"${i}\"><a>${i}</a></li>`;\n          } else {\n            html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName}\" data-num=\"${i}\">${getPageLinkTag(i)}</li>`;\n          }\n        }\n\n        if (rangeEnd >= totalPage - 2) {\n          for (i = rangeEnd + 1; i <= totalPage; i++) {\n            html += `<li class=\"${classPrefix}-page J-paginationjs-page ${pageClassName}\" data-num=\"${i}\">${getPageLinkTag(i)}</li>`;\n          }\n        } else {\n          html += `<li class=\"${classPrefix}-ellipsis ${disableClassName}\"><a>${ellipsisText}</a></li>`;\n\n          if (!attributes.hideLastOnEllipsisShow) {\n            html += `<li class=\"${classPrefix}-page ${classPrefix}-last J-paginationjs-page ${pageClassName}\" data-num=\"${totalPage}\">${getPageLinkTag(totalPage)}</li>`;\n          }\n        }\n\n        return html;\n      },\n\n      // Generate HTML content\n      generateHTML: function(args) {\n        var self = this;\n        var currentPage = args.currentPage;\n        var totalPage = self.getTotalPage();\n        var getPageLinkTag = self.getPageLinkTag;\n\n        var totalNumber = self.getTotalNumber();\n\n        var pageSize = attributes.pageSize;\n        var showPrevious = attributes.showPrevious;\n        var showNext = attributes.showNext;\n        var showPageNumbers = attributes.showPageNumbers;\n        var showNavigator = attributes.showNavigator;\n        var showSizeChanger = attributes.showSizeChanger;\n        var sizeChangerOptions = attributes.sizeChangerOptions;\n        var showGoInput = attributes.showGoInput;\n        var showGoButton = attributes.showGoButton;\n\n        var prevText = attributes.prevText;\n        var nextText = attributes.nextText;\n        var goButtonText = attributes.goButtonText;\n\n        var classPrefix = attributes.classPrefix;\n        var disableClassName = attributes.disableClassName || '';\n        var ulClassName = attributes.ulClassName || '';\n        var prevClassName = attributes.prevClassName || '';\n        var nextClassName = attributes.nextClassName || '';\n\n        var html = '';\n        var sizeSelect = `<select class=\"J-paginationjs-size-select\">`;\n        var goInput = '<input type=\"text\" class=\"J-paginationjs-go-pagenumber\">';\n        var goButton = `<input type=\"button\" class=\"J-paginationjs-go-button\" value=\"${goButtonText}\">`;\n        var formattedString;\n\n        var formatSizeChanger = typeof attributes.formatSizeChanger === 'function' ? attributes.formatSizeChanger(currentPage, totalPage, totalNumber) : attributes.formatSizeChanger;\n        var formatNavigator = typeof attributes.formatNavigator === 'function' ? attributes.formatNavigator(currentPage, totalPage, totalNumber) : attributes.formatNavigator;\n        var formatGoInput = typeof attributes.formatGoInput === 'function' ? attributes.formatGoInput(goInput, currentPage, totalPage, totalNumber) : attributes.formatGoInput;\n        var formatGoButton = typeof attributes.formatGoButton === 'function' ? attributes.formatGoButton(goButton, currentPage, totalPage, totalNumber) : attributes.formatGoButton;\n\n        var autoHidePrevious = typeof attributes.autoHidePrevious === 'function' ? attributes.autoHidePrevious() : attributes.autoHidePrevious;\n        var autoHideNext = typeof attributes.autoHideNext === 'function' ? attributes.autoHideNext() : attributes.autoHideNext;\n\n        var header = typeof attributes.header === 'function' ? attributes.header(currentPage, totalPage, totalNumber) : attributes.header;\n        var footer = typeof attributes.footer === 'function' ? attributes.footer(currentPage, totalPage, totalNumber) : attributes.footer;\n\n        // Prepend extra contents to the pagination buttons\n        if (header) {\n          formattedString = self.replaceVariables(header, {\n            currentPage: currentPage,\n            totalPage: totalPage,\n            totalNumber: totalNumber\n          });\n          html += formattedString;\n        }\n\n        // Whether to display navigator\n        if (showNavigator) {\n          if (formatNavigator) {\n            formattedString = self.replaceVariables(formatNavigator, {\n              currentPage: currentPage,\n              totalPage: totalPage,\n              totalNumber: totalNumber,\n              rangeStart: (currentPage - 1) * pageSize + 1,\n              rangeEnd: Math.min(currentPage * pageSize, totalNumber)\n            });\n            html += `<div class=\"${classPrefix}-nav J-paginationjs-nav\">${formattedString}</div>`;\n          }\n        }\n\n        if (showPrevious || showPageNumbers || showNext) {\n          html += '<div class=\"paginationjs-pages\">';\n\n          if (ulClassName) {\n            html += `<ul class=\"${ulClassName}\">`;\n          } else {\n            html += '<ul>';\n          }\n\n          // Whether to display Previous button\n          if (showPrevious) {\n            if (currentPage <= 1) {\n              if (!autoHidePrevious) {\n                html += `<li class=\"${classPrefix}-prev ${disableClassName} ${prevClassName}\"><a>${prevText}</a></li>`;\n              }\n            } else {\n              html += `<li class=\"${classPrefix}-prev J-paginationjs-previous ${prevClassName}\" data-num=\"${currentPage - 1}\" title=\"Previous page\">${getPageLinkTag(prevText)}</li>`;\n            }\n          }\n\n          // Whether to display page numbers\n          if (showPageNumbers) {\n            html += self.generatePageNumbersHTML(args);\n          }\n\n          // Whether to display Next button\n          if (showNext) {\n            if (currentPage >= totalPage) {\n              if (!autoHideNext) {\n                html += `<li class=\"${classPrefix}-next ${disableClassName} ${nextClassName}\"><a>${nextText}</a></li>`;\n              }\n            } else {\n              html += `<li class=\"${classPrefix}-next J-paginationjs-next ${nextClassName}\" data-num=\"${currentPage + 1}\" title=\"Next page\">${getPageLinkTag(nextText)}</li>`;\n            }\n          }\n          html += `</ul></div>`;\n        }\n\n        if (showSizeChanger) {\n          if (Helpers.isArray(sizeChangerOptions)) {\n            if (sizeChangerOptions.indexOf(pageSize) === -1) {\n              sizeChangerOptions.unshift(pageSize);\n              sizeChangerOptions.sort((a, b) => a - b);\n            }\n            for (let i = 0; i < sizeChangerOptions.length; i++) {\n              sizeSelect += `<option value=\"${sizeChangerOptions[i]}\"${(sizeChangerOptions[i] === pageSize ? ' selected' : '')}>${sizeChangerOptions[i]} / page</option>`;\n            }\n            sizeSelect += `</select>`;\n            formattedString = sizeSelect;\n\n            if (formatSizeChanger) {\n              formattedString = self.replaceVariables(formatSizeChanger, {\n                length: sizeSelect,\n                total: totalNumber\n              });\n            }\n            html += `<div class=\"paginationjs-size-changer\">${formattedString}</div>`;\n          }\n        }\n\n        // Whether to display Go input\n        if (showGoInput) {\n          if (formatGoInput) {\n            formattedString = self.replaceVariables(formatGoInput, {\n              currentPage: currentPage,\n              totalPage: totalPage,\n              totalNumber: totalNumber,\n              input: goInput\n            });\n            html += `<div class=\"${classPrefix}-go-input\">${formattedString}</div>`;\n          }\n        }\n\n        // Whether to display Go button\n        if (showGoButton) {\n          if (formatGoButton) {\n            formattedString = self.replaceVariables(formatGoButton, {\n              currentPage: currentPage,\n              totalPage: totalPage,\n              totalNumber: totalNumber,\n              button: goButton\n            });\n            html += `<div class=\"${classPrefix}-go-button\">${formattedString}</div>`;\n          }\n        }\n\n        // Append extra contents to the pagination buttons\n        if (footer) {\n          formattedString = self.replaceVariables(footer, {\n            currentPage: currentPage,\n            totalPage: totalPage,\n            totalNumber: totalNumber\n          });\n          html += formattedString;\n        }\n\n        return html;\n      },\n\n      // dataSource is a request URL and a 'totalNumberLocator' function specified\n      // execute it to find out 'totalNumber' from the response\n      findTotalNumberFromRemoteResponse: function(response) {\n        var self = this;\n        self.model.totalNumber = attributes.totalNumberLocator(response);\n      },\n\n      // Go to the specified page\n      go: function(number, callback) {\n        var self = this;\n        var model = self.model;\n\n        if (self.disabled) return;\n\n        var pageNumber = number;\n        pageNumber = parseInt(pageNumber);\n\n        if (!pageNumber || pageNumber < 1) return;\n\n        var pageSize = attributes.pageSize;\n        var totalNumber = self.getTotalNumber();\n        var totalPage = self.getTotalPage();\n\n        if (totalNumber > 0 && pageNumber > totalPage) return;\n\n        // Pick paging data in synchronous mode\n        if (!self.isAsync) {\n          render(self.getPagingData(pageNumber));\n          return;\n        }\n\n        var postData = {};\n        var alias = attributes.alias || {};\n        var pageSizeName = alias.pageSize ? alias.pageSize : 'pageSize';\n        var pageNumberName = alias.pageNumber ? alias.pageNumber : 'pageNumber';\n        postData[pageSizeName] = pageSize;\n        postData[pageNumberName] = pageNumber;\n\n        var ajaxParams = typeof attributes.ajax === 'function' ? attributes.ajax() : attributes.ajax;\n\n        // If the pageNumber's value starts with 0 via Ajax\n        if (ajaxParams && ajaxParams.pageNumberStartWithZero) {\n          postData[pageNumberName] = pageNumber - 1;\n        }\n\n        var formatAjaxParams = {\n          type: 'get',\n          cache: false,\n          data: {},\n          contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n          dataType: 'json',\n          async: true\n        };\n\n        $.extend(true, formatAjaxParams, ajaxParams);\n        $.extend(formatAjaxParams.data, postData);\n\n        formatAjaxParams.url = attributes.dataSource;\n        formatAjaxParams.success = function(response) {\n          try {\n            self.model.originalResponse = response;\n            if (self.isDynamicTotalNumber) {\n              self.findTotalNumberFromRemoteResponse(response);\n            } else {\n              self.model.totalNumber = attributes.totalNumber;\n            }\n\n            var finalData = self.filterDataWithLocator(response);\n            render(finalData);\n          } catch (e) {\n            if(typeof attributes.onError === 'function') {\n              attributes.onError(e, 'ajaxSuccessHandlerError');\n            } else {\n              throw e;\n            }\n          }\n        };\n        formatAjaxParams.error = function(jqXHR, textStatus, errorThrown) {\n          attributes.formatAjaxError && attributes.formatAjaxError(jqXHR, textStatus, errorThrown);\n          self.enable();\n        };\n\n        self.disable();\n\n        if (attributes.ajaxFunction) {\n          attributes.ajaxFunction(formatAjaxParams);\n        } else {\n          $.ajax(formatAjaxParams);\n        }\n\n        function render(data) {\n          if (self.callHook('beforePaging', pageNumber) === false) return false;\n\n          // Pagination direction\n          model.direction = typeof model.pageNumber === 'undefined' ? 0 : (pageNumber > model.pageNumber ? 1 : -1);\n\n          model.pageNumber = pageNumber;\n\n          self.render();\n\n          if (self.disabled && self.isAsync) {\n            // enable pagination\n            self.enable();\n          }\n\n          // cache model data\n          container.data('pagination').model = model;\n\n          // format result data before callback invoked\n          if (attributes.formatResult) {\n            var cloneData = $.extend(true, [], data);\n            if (!Helpers.isArray(data = attributes.formatResult(cloneData))) {\n              data = cloneData;\n            }\n          }\n\n          container.data('pagination').currentPageData = data;\n\n          self.doCallback(data, callback);\n\n          self.callHook('afterPaging', pageNumber);\n\n          if (pageNumber == 1) {\n            self.callHook('afterIsFirstPage');\n          } else if (pageNumber == self.getTotalPage()) {\n            self.callHook('afterIsLastPage');\n          }\n        }\n      },\n\n      doCallback: function(data, customCallback) {\n        var self = this;\n        var model = self.model;\n\n        if (typeof customCallback === 'function') {\n          customCallback(data, model);\n        } else if (typeof attributes.callback === 'function') {\n          attributes.callback(data, model);\n        }\n      },\n\n      destroy: function() {\n        if (this.callHook('beforeDestroy') === false) return;\n\n        this.model.el.remove();\n        container.off();\n\n        // Remove style element\n        $('#paginationjs-style').remove();\n\n        this.callHook('afterDestroy');\n      },\n\n      previous: function(callback) {\n        this.go(this.model.pageNumber - 1, callback);\n      },\n\n      next: function(callback) {\n        this.go(this.model.pageNumber + 1, callback);\n      },\n\n      disable: function() {\n        var self = this;\n        var source = self.isAsync ? 'async' : 'sync';\n\n        if (self.callHook('beforeDisable', source) === false) return;\n\n        self.disabled = true;\n        self.model.disabled = true;\n\n        self.callHook('afterDisable', source);\n      },\n\n      enable: function() {\n        var self = this;\n        var source = self.isAsync ? 'async' : 'sync';\n\n        if (self.callHook('beforeEnable', source) === false) return;\n\n        self.disabled = false;\n        self.model.disabled = false;\n\n        self.callHook('afterEnable', source);\n      },\n\n      refresh: function(callback) {\n        this.go(this.model.pageNumber, callback);\n      },\n\n      show: function() {\n        var self = this;\n\n        if (self.model.el.is(':visible')) return;\n\n        self.model.el.show();\n      },\n\n      hide: function() {\n        var self = this;\n\n        if (!self.model.el.is(':visible')) return;\n\n        self.model.el.hide();\n      },\n\n      // Replace variables for template string\n      replaceVariables: function(template, variables) {\n        var formattedString;\n\n        for (var key in variables) {\n          var value = variables[key];\n          var regexp = new RegExp('<%=\\\\s*' + key + '\\\\s*%>', 'img');\n\n          formattedString = (formattedString || template).replace(regexp, value);\n        }\n\n        return formattedString;\n      },\n\n      getPagingData: function(number) {\n        var pageSize = attributes.pageSize;\n        var dataSource = attributes.dataSource;\n        var totalNumber = this.getTotalNumber();\n\n        var start = pageSize * (number - 1) + 1;\n        var end = Math.min(number * pageSize, totalNumber);\n\n        return dataSource.slice(start - 1, end);\n      },\n\n      getTotalNumber: function() {\n        return this.model.totalNumber || attributes.totalNumber || 0;\n      },\n\n      getTotalPage: function() {\n        return Math.ceil(this.getTotalNumber() / attributes.pageSize);\n      },\n\n      getLocator: function(locator) {\n        var result;\n\n        if (typeof locator === 'string') {\n          result = locator;\n        } else if (typeof locator === 'function') {\n          result = locator();\n        } else {\n          throwError('\"locator\" is incorrect. Expect string or function type.');\n        }\n\n        return result;\n      },\n\n      // Filter data with \"locator\"\n      filterDataWithLocator: function(dataSource) {\n        var locator = this.getLocator(attributes.locator);\n        var filteredData;\n\n        // Datasource is an Object, use \"locator\" to locate available data\n        if (Helpers.isObject(dataSource)) {\n          try {\n            $.each(locator.split('.'), function(index, item) {\n              filteredData = (filteredData ? filteredData : dataSource)[item];\n            });\n          }\n          catch (e) {\n            // ignore\n          }\n\n          if (!filteredData) {\n            throwError('dataSource.' + locator + ' is undefined.');\n          } else if (!Helpers.isArray(filteredData)) {\n            throwError('dataSource.' + locator + ' should be an Array.');\n          }\n        }\n\n        return filteredData || dataSource;\n      },\n\n      parseDataSource: function(dataSource, callback) {\n        var self = this;\n\n        if (Helpers.isObject(dataSource)) {\n          callback(attributes.dataSource = self.filterDataWithLocator(dataSource));\n        } else if (Helpers.isArray(dataSource)) {\n          callback(attributes.dataSource = dataSource);\n        } else if (typeof dataSource === 'function') {\n          attributes.dataSource(function(data) {\n            if (!Helpers.isArray(data)) {\n              throwError('The parameter of \"done\" Function should be an Array.');\n            }\n            self.parseDataSource.call(self, data, callback);\n          });\n        } else if (typeof dataSource === 'string') {\n          if (/^https?|file:/.test(dataSource)) {\n            attributes.ajaxDataType = 'jsonp';\n          }\n          callback(dataSource);\n        } else {\n          throwError('Unexpected dataSource type');\n        }\n      },\n\n      callHook: function(hook) {\n        var paginationData = container.data('pagination') || {};\n        var result;\n\n        var args = Array.prototype.slice.apply(arguments);\n        args.shift();\n\n        if (attributes[hook] && typeof attributes[hook] === 'function') {\n          if (attributes[hook].apply(global, args) === false) {\n            result = false;\n          }\n        }\n\n        if (paginationData.hooks && paginationData.hooks[hook]) {\n          $.each(paginationData.hooks[hook], function(index, item) {\n            if (item.apply(global, args) === false) {\n              result = false;\n            }\n          });\n        }\n\n        return result !== false;\n      },\n\n      observer: function() {\n        var self = this;\n        var el = self.model.el;\n\n        // Go to specified page number\n        container.on(eventPrefix + 'go', function(event, pageNumber, done) {\n          if (typeof pageNumber === 'string') {\n            pageNumber = parseInt(pageNumber.trim());\n          }\n\n          if (!pageNumber) return;\n\n          if (typeof pageNumber !== 'number') {\n            throwError('\"pageNumber\" is incorrect. (Number)');\n          }\n\n          self.go(pageNumber, done);\n        });\n\n        // Page number button click listener\n        el.on('click', '.J-paginationjs-page', function(event) {\n          var current = $(event.currentTarget);\n          var pageNumber = current.attr('data-num').trim();\n\n          if (!pageNumber || current.hasClass(attributes.disableClassName) || current.hasClass(attributes.activeClassName)) return;\n\n          if (self.callHook('beforePageOnClick', event, pageNumber) === false) return false;\n\n          self.go(pageNumber);\n\n          self.callHook('afterPageOnClick', event, pageNumber);\n\n          if (!attributes.pageLink) return false;\n        });\n\n        // Previous button click listener\n        el.on('click', '.J-paginationjs-previous', function(event) {\n          var current = $(event.currentTarget);\n          var pageNumber = current.attr('data-num').trim();\n\n          if (!pageNumber || current.hasClass(attributes.disableClassName)) return;\n\n          if (self.callHook('beforePreviousOnClick', event, pageNumber) === false) return false;\n\n          self.go(pageNumber);\n\n          self.callHook('afterPreviousOnClick', event, pageNumber);\n\n          if (!attributes.pageLink) return false;\n        });\n\n        // Next button click listener\n        el.on('click', '.J-paginationjs-next', function(event) {\n          var current = $(event.currentTarget);\n          var pageNumber = current.attr('data-num').trim();\n\n          if (!pageNumber || current.hasClass(attributes.disableClassName)) return;\n\n          if (self.callHook('beforeNextOnClick', event, pageNumber) === false) return false;\n\n          self.go(pageNumber);\n\n          self.callHook('afterNextOnClick', event, pageNumber);\n\n          if (!attributes.pageLink) return false;\n        });\n\n        // Go button click listener\n        el.on('click', '.J-paginationjs-go-button', function(event) {\n          var pageNumber = $('.J-paginationjs-go-pagenumber', el).val();\n\n          if (self.callHook('beforeGoButtonOnClick', event, pageNumber) === false) return false;\n\n          container.trigger(eventPrefix + 'go', pageNumber);\n\n          self.callHook('afterGoButtonOnClick', event, pageNumber);\n        });\n\n        // go input enter keyup listener\n        el.on('keyup', '.J-paginationjs-go-pagenumber', function(event) {\n          if (event.which === 13) {\n            var pageNumber = $(event.currentTarget).val();\n\n            if (self.callHook('beforeGoInputOnEnter', event, pageNumber) === false) return false;\n\n            container.trigger(eventPrefix + 'go', pageNumber);\n\n            // Maintain the cursor\n            $('.J-paginationjs-go-pagenumber', el).focus();\n\n            self.callHook('afterGoInputOnEnter', event, pageNumber);\n          }\n        });\n\n        el.on('change', '.J-paginationjs-size-select', function(event) {\n          var current = $(event.currentTarget);\n          var size = parseInt(current.val());\n          var currentPage = self.model.pageNumber || attributes.pageNumber;\n\n          if (typeof size !== 'number') return;\n\n          if (self.callHook('beforeSizeSelectorChange', event, size) === false) return false;\n\n          attributes.pageSize = size;\n          self.model.pageSize = size;\n          self.model.totalPage = self.getTotalPage();\n          if (currentPage > self.model.totalPage) {\n            currentPage = self.model.totalPage;\n          }\n          self.go(currentPage);\n\n          self.callHook('afterSizeSelectorChange', event, size);\n\n          if (!attributes.pageLink) return false;\n        });\n\n        // Previous page\n        container.on(eventPrefix + 'previous', function(event, done) {\n          self.previous(done);\n        });\n\n        // Next page\n        container.on(eventPrefix + 'next', function(event, done) {\n          self.next(done);\n        });\n\n        // Disable\n        container.on(eventPrefix + 'disable', function() {\n          self.disable();\n        });\n\n        // Enable\n        container.on(eventPrefix + 'enable', function() {\n          self.enable();\n        });\n\n        // Refresh\n        container.on(eventPrefix + 'refresh', function(event, done) {\n          self.refresh(done);\n        });\n\n        // Show\n        container.on(eventPrefix + 'show', function() {\n          self.show();\n        });\n\n        // Hide\n        container.on(eventPrefix + 'hide', function() {\n          self.hide();\n        });\n\n        // Destroy\n        container.on(eventPrefix + 'destroy', function() {\n          self.destroy();\n        });\n\n        // Whether to load the default page\n        var validTotalPage = Math.max(self.getTotalPage(), 1)\n        var defaultPageNumber = attributes.pageNumber;\n        \n        // Default pageNumber should be 1 when totalNumber is dynamic\n        if (self.isDynamicTotalNumber) {\n          if (attributes.resetPageNumberOnInit) defaultPageNumber = 1;\n        }\n\n        if (attributes.triggerPagingOnInit) {\n          container.trigger(eventPrefix + 'go', Math.min(defaultPageNumber, validTotalPage));\n        }\n      }\n    };\n\n    // Pagination has been initialized\n    if (container.data('pagination') && container.data('pagination').initialized === true) {\n      // Handle events\n      if (isNumeric(options)) {\n        // eg: container.pagination(5)\n        container.trigger.call(this, eventPrefix + 'go', options, arguments[1]);\n        return this;\n      } else if (typeof options === 'string') {\n        var args = Array.prototype.slice.apply(arguments);\n          args[0] = eventPrefix + args[0];\n\n        switch (options) {\n          case 'previous':\n          case 'next':\n          case 'go':\n          case 'disable':\n          case 'enable':\n          case 'refresh':\n          case 'show':\n          case 'hide':\n          case 'destroy':\n            container.trigger.apply(this, args);\n            break;\n          case 'getSelectedPageNum':\n          case 'getCurrentPageNum':\n            if (container.data('pagination').model) {\n              return container.data('pagination').model.pageNumber;\n            } else {\n              return container.data('pagination').attributes.pageNumber;\n            }\n          case 'getTotalPage':\n            return Math.ceil(container.data('pagination').model.totalNumber / container.data('pagination').model.pageSize);\n          case 'getSelectedPageData':\n          case 'getCurrentPageData':\n            return container.data('pagination').currentPageData;\n          // Whether pagination has been disabled\n          case 'isDisabled':\n            return container.data('pagination').model.disabled === true;\n          default:\n            throwError('Unknown action: ' + options);\n        }\n        return this;\n      } else {\n        // Uninstall the old instance before initializing a new one\n        uninstallPlugin(container);\n      }\n    } else {\n      if (!Helpers.isObject(options)) throwError('Illegal options');\n    }\n\n    // Check parameters\n    parameterChecker(attributes);\n\n    pagination.initialize();\n\n    return this;\n  };\n\n  // Instance defaults\n  $.fn[pluginName].defaults = {\n\n    // Data source\n    // Array | String | Function | Object\n    //dataSource: '',\n\n    // String | Function\n    //locator: 'data',\n\n    // Function\n    //totalNumberLocator: function() {},\n\n    // Total number of data items\n    totalNumber: 0,\n\n    // Default page number\n    pageNumber: 1,\n\n    // Number of data items per page\n    pageSize: 10,\n\n    // Page range (pages around current page)\n    pageRange: 2,\n\n    // Whether to display the 'Previous' button\n    showPrevious: true,\n\n    // Whether to display the 'Next' button\n    showNext: true,\n\n    // Whether to display the page buttons\n    showPageNumbers: true,\n\n    showNavigator: false,\n\n    // Whether to display the 'Go' input\n    showGoInput: false,\n\n    // Whether to display the 'Go' button\n    showGoButton: false,\n\n    showSizeChanger: false,\n\n    sizeChangerOptions: [10, 20, 50, 100],\n\n    // Page link\n    pageLink: '',\n\n    // 'Previous' text\n    prevText: '&lsaquo;',\n\n    // 'Next' text\n    nextText: '&rsaquo;',\n\n    // Ellipsis text\n    ellipsisText: '...',\n\n    // 'Go' button text\n    goButtonText: 'Go',\n\n    // Additional class name(s) for the Pagination container\n    //className: '',\n\n    classPrefix: 'paginationjs',\n\n    activeClassName: 'active',\n\n    // class name when disabled\n    disableClassName: 'disabled',\n\n    //ulClassName: '',\n\n    //pageClassName: '',\n\n    //prevClassName: '',\n\n    //nextClassName: '',\n\n    formatNavigator: 'Total <%= totalNumber %> items',\n\n    formatGoInput: '<%= input %>',\n\n    formatGoButton: '<%= button %>',\n\n    // position in the container\n    position: 'bottom',\n\n    // Auto hide previous button when current page is the first\n    autoHidePrevious: false,\n\n    // Auto hide next button when current page is the last\n    autoHideNext: false,\n\n    //header: '',\n\n    //footer: '',\n\n    //alias: {},\n\n    // Whether to trigger pagination at initialization\n    triggerPagingOnInit: true,\n\n    // Whether to reset page number at initialization, it works only if dataSource is a URL and totalNumberLocator is specified\n    resetPageNumberOnInit: true,\n\n    // Whether to hide pagination when less than one page\n    hideOnlyOnePage: false,\n\n    hideFirstOnEllipsisShow: false,\n\n    hideLastOnEllipsisShow: false,\n\n    // Customize item's innerHTML\n    callback: function() {}\n  };\n\n  // Hook register\n  $.fn[pluginHookMethod] = function(hook, callback) {\n    if (arguments.length < 2) {\n      throwError('Expect 2 arguments at least.');\n    }\n\n    if (typeof callback !== 'function') {\n      throwError('callback should be a function.');\n    }\n\n    var container = $(this);\n    var paginationData = container.data('pagination');\n\n    if (!paginationData) {\n      container.data('pagination', {});\n      paginationData = container.data('pagination');\n    }\n\n    !paginationData.hooks && (paginationData.hooks = {});\n\n    //paginationData.hooks[hook] = callback;\n    paginationData.hooks[hook] = paginationData.hooks[hook] || [];\n    paginationData.hooks[hook].push(callback);\n\n  };\n\n  // Static method\n  $[pluginName] = function(selector, options) {\n    if (arguments.length < 2) {\n      throwError('Requires two parameters.');\n    }\n\n    var container;\n\n    // 'selector' is a jQuery object\n    if (typeof selector !== 'string' && selector instanceof jQuery) {\n      container = selector;\n    } else {\n      container = $(selector);\n    }\n\n    if (!container.length) return;\n\n    container.pagination(options);\n\n    return container;\n  };\n\n  // ============================================================\n  // helpers\n  // ============================================================\n\n  var Helpers = {};\n\n  // Throw error\n  function throwError(content) {\n    throw new Error('Pagination: ' + content);\n  }\n\n  // Check parameters\n  function parameterChecker(args) {\n    if (!args.dataSource) {\n      throwError('\"dataSource\" is required.');\n    }\n\n    if (typeof args.dataSource === 'string') {\n      if (args.totalNumberLocator === undefined) {\n        if (args.totalNumber === undefined) {\n          throwError('\"totalNumber\" is required.');\n        } else if (!isNumeric(args.totalNumber)) {\n          throwError('\"totalNumber\" is incorrect. Expect numberic type');\n        }\n      } else {\n        if (typeof args.totalNumberLocator !== 'function') {\n          throwError('\"totalNumberLocator\" should be a Function.');\n        }\n      }\n    } else if (Helpers.isObject(args.dataSource)) {\n      if (typeof args.locator === 'undefined') {\n        throwError('\"dataSource\" is an Object, please specify a \"locator\".');\n      } else if (typeof args.locator !== 'string' && typeof args.locator !== 'function') {\n        throwError('' + args.locator + ' is incorrect. Expect string or function type');\n      }\n    }\n\n    if (args.formatResult !== undefined && typeof args.formatResult !== 'function') {\n      throwError('\"formatResult\" should be a Function.');\n    }\n\n    if (args.onError !== undefined && typeof args.onError !== 'function') {\n      throwError('\"onError\" should be a Function.');\n    }\n  }\n\n  // uninstall plugin\n  function uninstallPlugin(target) {\n    var events = ['go', 'previous', 'next', 'disable', 'enable', 'refresh', 'show', 'hide', 'destroy'];\n\n    // off all events\n    $.each(events, function(index, value) {\n      target.off(eventPrefix + value);\n    });\n\n    // reset pagination data\n    target.data('pagination', {});\n\n    // remove pagination element\n    $('.paginationjs', target).remove();\n  }\n\n  // Object type detection\n  function getObjectType(object, tmp) {\n    return ( (tmp = typeof(object)) == \"object\" ? object == null && \"null\" || Object.prototype.toString.call(object).slice(8, -1) : tmp ).toLowerCase();\n  }\n\n  function isNumeric(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  $.each(['Object', 'Array', 'String'], function(index, name) {\n    Helpers['is' + name] = function(object) {\n      return getObjectType(object) === name.toLowerCase();\n    };\n  });\n\n  /*\n   * export via AMD or CommonJS\n   * */\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return $;\n    });\n  }\n\n})(this, window.jQuery);\n"],"names":["global","$","throwError","pluginName","eventPrefix","fn","pagination","options","container","attributes","extend","defaults","data","initialized","isNumeric","trigger","call","arguments","args","Array","prototype","slice","apply","model","pageNumber","Math","ceil","totalNumber","pageSize","currentPageData","disabled","each","index","value","target","off","remove","Helpers","isObject","dataSource","undefined","totalNumberLocator","locator","formatResult","onError","initialize","self","callHook","pageRange","parseDataSource","isAsync","isString","isArray","length","isDynamicTotalNumber","el","render","className","addClass","position","observer","isBoot","isForced","currentPage","totalPage","getTotalPage","rangeStart","rangeEnd","min","html","generateHTML","hideOnlyOnePage","getPageLinkTag","pageLink","generatePageNumbersHTML","i","ellipsisText","classPrefix","pageClassName","activeClassName","disableClassName","hideFirstOnEllipsisShow","hideLastOnEllipsisShow","formattedString","getTotalNumber","showPrevious","showNext","showPageNumbers","showNavigator","showSizeChanger","sizeChangerOptions","showGoInput","showGoButton","prevText","nextText","goButtonText","ulClassName","prevClassName","nextClassName","sizeSelect","goInput","goButton","formatSizeChanger","formatNavigator","formatGoInput","formatGoButton","autoHidePrevious","autoHideNext","header","footer","replaceVariables","indexOf","unshift","sort","a","b","total","input","button","findTotalNumberFromRemoteResponse","response","go","number","callback","parseInt","getPagingData","postData","alias","pageSizeName","pageNumberName","ajaxParams","ajax","pageNumberStartWithZero","formatAjaxParams","type","cache","contentType","dataType","async","url","success","originalResponse","finalData","filterDataWithLocator","e","error","jqXHR","textStatus","errorThrown","formatAjaxError","enable","disable","ajaxFunction","direction","cloneData","doCallback","customCallback","destroy","previous","next","source","refresh","show","is","hide","template","variables","key","regexp","RegExp","replace","end","start","getLocator","result","filteredData","split","item","test","ajaxDataType","hook","paginationData","shift","hooks","on","event","done","trim","current","currentTarget","attr","hasClass","val","which","focus","size","validTotalPage","max","defaultPageNumber","resetPageNumberOnInit","triggerPagingOnInit","push","selector","jQuery","content","Error","n","isNaN","parseFloat","isFinite","name","object","tmp","getObjectType","Object","toString","toLowerCase","define","amd","window","pluginHookMethod","uninstallPlugin","parameterChecker","events"],"version":3,"file":"index.03609b0f.js.map"}