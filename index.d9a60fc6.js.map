{"mappings":"C,A,W,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,E,S,E,S,I,E,E,S,E,E,SEMA,IAAM2I,EAAenH,SAASC,cAAc,CAAC,gBAoD7CmH,AAjDA,iBACE,GAAI,CAoCJ,IAAIjH,EAAAA,EAAcC,AAlCFC,AADD,CAAA,MAAMC,AAAAA,CAAAA,EAAAA,EAAAA,QAAAA,AAAAA,GAAnB,EACmBC,OAAO,CAkCCC,GAAG,CAACC,AAAAA,GACxBC,AAAAA,CAAAA,EAAAA,EAAAA,iBAAAA,AAAAA,EACLD,EAAOrB,EAAE,CACTqB,EAAOE,WAAW,CAClBF,EAAOG,KAAK,CACZH,EAAOI,YACT,GAEFsG,EAAarG,SAAS,CAAGX,EAAYY,IAAI,CAAC,GAzC1C,CAAC,MAAMC,EAAG,CAEV,QAAU,CACK,IAAIC,OAAO,YAAa,CAEnCC,WAAY,CACVC,GAAI,oBACN,EACAC,cAAe,EACfC,aAAc,GACdC,SAAU,CACRC,MAAO,GACT,EACAC,YAAa,CAEX,KAAM,CACJJ,cAAe,CACjB,EACA,IAAK,CACHA,cAAe,CACjB,EACA,EAAG,CACDA,cAAe,CACjB,CACF,CAEF,EACF,CACF,I,I,E,E,S,E,E,S,E,E,SD3BA,IAAMiF,EAAiBrG,SAAS2B,aAAa,CAAC,oBACxC2E,EAAatG,SAAS2B,aAAa,CAAC,WACpC4E,EAAcvG,SAAS2B,aAAa,CAAC,YACrC6E,EAAexG,SAAS2B,aAAa,CAAC,aACtC8E,EAAezG,SAAS2B,aAAa,CAAC,aACtC+E,EAAiB1G,SAAS2B,aAAa,CAAC,wBAC1CgF,EAAc,EAkBlB,SAASE,EAAczG,CAAU,EAC/B,IAAID,EAAcC,EAAWI,GAAG,CAAC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","sources":["<anon>","src/index.js","src/js/upcoming.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired787\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired787\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRequire(\"5xtVg\");\nparcelRequire(\"i8Q71\");\n\nvar $b7ONl = parcelRequire(\"b7ONl\");\n\nvar $1RLhk = parcelRequire(\"1RLhk\");\nconst $4c6aab06649ec8ef$var$upcomingList = document.getElementById(\"swiper-list\");\nasync function $4c6aab06649ec8ef$var$upcomingMovies() {\n    try {\n        const data = await (0, $b7ONl.upcoming)();\n        $4c6aab06649ec8ef$var$displayResult(data.results);\n    } catch (e) {} finally{\n        var swiper = new Swiper(\".mySwiper\", {\n            pagination: {\n                el: \".swiper-pagination\"\n            },\n            slidesPerView: 8,\n            spaceBetween: 18,\n            autoplay: {\n                delay: 3000\n            },\n            breakpoints: {\n                // when window width is >= 320px\n                1159: {\n                    slidesPerView: 8\n                },\n                768: {\n                    slidesPerView: 6\n                },\n                1: {\n                    slidesPerView: 2\n                }\n            }\n        });\n    }\n}\nfunction $4c6aab06649ec8ef$var$displayResult(dataResult) {\n    let finalResult = dataResult.map((result)=>{\n        return (0, $1RLhk.movieCardUpcoming)(result.id, result.poster_path, result.title, result.release_date);\n    });\n    $4c6aab06649ec8ef$var$upcomingList.innerHTML = finalResult.join(\"\");\n}\n$4c6aab06649ec8ef$var$upcomingMovies();\n\n\n\nvar $b7ONl = parcelRequire(\"b7ONl\");\n\nvar $ejkSG = parcelRequire(\"ejkSG\");\n\nvar $1RLhk = parcelRequire(\"1RLhk\");\nconst $b8f9b7833fa37166$var$movieContainer = document.querySelector(\".movie-container\");\nconst $b8f9b7833fa37166$var$listLoader = document.querySelector(\".loader\");\nconst $b8f9b7833fa37166$var$libraryList = document.querySelector(\".library\");\nconst $b8f9b7833fa37166$var$libraryListQ = document.querySelector(\".libraryQ\");\nconst $b8f9b7833fa37166$var$libraryListW = document.querySelector(\".libraryW\");\nconst $b8f9b7833fa37166$var$listPagination = document.querySelector(\".is-hiddenPagination\");\nlet $b8f9b7833fa37166$var$currentPage = 1;\nasync function $b8f9b7833fa37166$var$movieList(page = 1) {\n    $b8f9b7833fa37166$var$listLoader.classList.remove(\"is-hidden\");\n    $b8f9b7833fa37166$var$currentPage = 1;\n    $b8f9b7833fa37166$var$movieContainer.innerHTML = \"\";\n    try {\n        const queryResult = await (0, $b7ONl.getMoviesPopular)($b8f9b7833fa37166$var$currentPage);\n        console.log(queryResult);\n        $b8f9b7833fa37166$var$displayResult(queryResult.results);\n        $b8f9b7833fa37166$var$setupPagination(queryResult.total_results);\n        $b8f9b7833fa37166$var$listLoader.classList.add(\"is-hidden\");\n    } catch (error) {\n        console.error(\"Error fetching movies:\", error);\n    }\n}\nfunction $b8f9b7833fa37166$var$displayResult(dataResult) {\n    let finalResult = dataResult.map((result)=>{\n        let year = result.release_date.split(\"-\");\n        return (0, $1RLhk.movieCard)(result.id, result.poster_path, result.title, result.genre_ids, year);\n    });\n    $b8f9b7833fa37166$var$movieContainer.innerHTML = finalResult.join(\"\");\n}\nfunction $b8f9b7833fa37166$var$displayResultLibrary(dataResult) {\n    $b8f9b7833fa37166$var$listPagination.classList.add(\"is-hiddenPagination\");\n    let finalResult = dataResult.map((result)=>{\n        let year = result.release_date.split(\"-\");\n        return (0, $1RLhk.movieCard)(result.id, result.poster_path, result.title, result.genre_ids, year);\n    });\n    $b8f9b7833fa37166$var$movieContainer.insertAdjacentHTML(\"beforeend\", finalResult.join(\"\"));\n}\nfunction $b8f9b7833fa37166$var$setupPagination(total) {\n    const maxItems = 20000;\n    const limitedTotal = Math.min(total, maxItems);\n    $(\"#pagination\").pagination({\n        dataSource: Array.from({\n            length: limitedTotal\n        }, (_, i)=>i + 1),\n        pageSize: 20,\n        callback: async function(data, pagination) {\n            $b8f9b7833fa37166$var$listPagination.classList.add(\"is-hiddenPagination\");\n            $b8f9b7833fa37166$var$listLoader.classList.remove(\"is-hidden\");\n            $b8f9b7833fa37166$var$currentPage = pagination.pageNumber;\n            const queryResult = await (0, $b7ONl.getMoviesPopular)($b8f9b7833fa37166$var$currentPage);\n            $b8f9b7833fa37166$var$displayResult(queryResult.results);\n            $b8f9b7833fa37166$var$listLoader.classList.add(\"is-hidden\");\n            $b8f9b7833fa37166$var$listPagination.classList.remove(\"is-hiddenPagination\");\n        }\n    });\n}\n$b8f9b7833fa37166$var$movieList();\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    document.body.addEventListener(\"click\", function(e) {\n        if (e.target && e.target.classList.contains(\"libraryBtn\")) {\n            const buttonText = e.target.textContent;\n            const movieId = e.target.closest(\".modalBtnContainer\");\n            let filmotekaWatchMovies = \"\";\n            const movieData = {\n                id: movieId.dataset.id\n            };\n            if (buttonText === \"Add to watched\") filmotekaWatchMovies = JSON.parse(localStorage.getItem(\"filmotekaWatchMovies\")) || [];\n            if (buttonText === \"Add to queue\") filmotekaWatchMovies = JSON.parse(localStorage.getItem(\"filmotekaQueueMovies\")) || [];\n            const isMovieWatched = filmotekaWatchMovies.some((filmotekaWatchMovies)=>filmotekaWatchMovies.id === movieData.id);\n            if (!isMovieWatched) {\n                if (buttonText === \"Add to watched\") {\n                    filmotekaWatchMovies.push(movieData);\n                    localStorage.setItem(\"filmotekaWatchMovies\", JSON.stringify(filmotekaWatchMovies));\n                }\n                if (buttonText === \"Add to queue\") {\n                    filmotekaWatchMovies.push(movieData);\n                    localStorage.setItem(\"filmotekaQueueMovies\", JSON.stringify(filmotekaWatchMovies));\n                }\n                (0, (/*@__PURE__*/$parcel$interopDefault($ejkSG))).Notify.success(\"Successfully added to the List!\");\n            } else (0, (/*@__PURE__*/$parcel$interopDefault($ejkSG))).Notify.info(\"This Movie is already added.\");\n        }\n    });\n});\nasync function $b8f9b7833fa37166$var$watchedListData(x) {\n    let watchedMoviesShow = \"\";\n    if (x === 0) watchedMoviesShow = JSON.parse(localStorage.getItem(\"filmotekaWatchMovies\")) || [];\n    if (x === 1) watchedMoviesShow = JSON.parse(localStorage.getItem(\"filmotekaQueueMovies\")) || [];\n    if (watchedMoviesShow.length === 0) {\n        (0, (/*@__PURE__*/$parcel$interopDefault($ejkSG))).Notify.info(\"No watch movies to display.\");\n        return;\n    }\n    $b8f9b7833fa37166$var$listLoader.classList.remove(\"is-hidden\");\n    $b8f9b7833fa37166$var$movieContainer.innerHTML = \"\";\n    for (const movie of watchedMoviesShow)try {\n        const searchResult = await (0, $b7ONl.getMovieDetails)(movie.id);\n        $b8f9b7833fa37166$var$displayResultLibrary([\n            searchResult\n        ]);\n    } catch (error) {\n        console.error(\"Error fetching list:\", error);\n    }\n    $b8f9b7833fa37166$var$listLoader.classList.add(\"is-hidden\");\n}\n$b8f9b7833fa37166$var$libraryList.addEventListener(\"click\", ()=>{\n    $b8f9b7833fa37166$var$watchedListData(0);\n});\n$b8f9b7833fa37166$var$libraryListQ.addEventListener(\"click\", ()=>{\n    $b8f9b7833fa37166$var$watchedListData(1);\n});\n$b8f9b7833fa37166$var$libraryListW.addEventListener(\"click\", ()=>{\n    $b8f9b7833fa37166$var$watchedListData(0);\n});\n\n})();\n//# sourceMappingURL=index.d9a60fc6.js.map\n","import './js/modal.js';\nimport './js/header.js';\nimport './js/upcoming.js';\n// import './js/header_library.js';\n\nimport {\n  MovieController,\n  getMoviesPopular,\n  getMovieDetails,\n} from './js/api.js';\nimport { API_KEY, BASE_URL, options } from './js/api.js';\nimport Notiflix from 'notiflix';\nimport { movieCard, movieCardHere } from './js/utils.js';\n\nconst movieContainer = document.querySelector('.movie-container');\nconst listLoader = document.querySelector('.loader');\nconst libraryList = document.querySelector('.library');\nconst libraryListQ = document.querySelector('.libraryQ');\nconst libraryListW = document.querySelector('.libraryW');\nconst listPagination = document.querySelector('.is-hiddenPagination');\nlet currentPage = 1;\n\nasync function movieList(page = 1) {\n  listLoader.classList.remove('is-hidden');\n  currentPage = 1;\n  movieContainer.innerHTML = '';\n  try {\n    const queryResult = await getMoviesPopular(currentPage);\n    console.log(queryResult);\n\n    displayResult(queryResult.results);\n    setupPagination(queryResult.total_results);\n    listLoader.classList.add('is-hidden');\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n  }\n}\n\nfunction displayResult(dataResult) {\n  let finalResult = dataResult.map(result => {\n    let year = result.release_date.split('-');\n    return movieCard(\n      result.id,\n      result.poster_path,\n      result.title,\n      result.genre_ids,\n      year\n    );\n  });\n  movieContainer.innerHTML = finalResult.join('');\n}\n\nfunction displayResultLibrary(dataResult) {\n  listPagination.classList.add('is-hiddenPagination');\n  let finalResult = dataResult.map(result => {\n    let year = result.release_date.split('-');\n    return movieCard(\n      result.id,\n      result.poster_path,\n      result.title,\n      result.genre_ids,\n      year\n    );\n  });\n  movieContainer.insertAdjacentHTML('beforeend', finalResult.join(''));\n}\n\nfunction setupPagination(total) {\n  const maxItems = 1000 * 20;\n  const limitedTotal = Math.min(total, maxItems);\n\n  $('#pagination').pagination({\n    dataSource: Array.from({ length: limitedTotal }, (_, i) => i + 1),\n    pageSize: 20,\n    callback: async function (data, pagination) {\n      listPagination.classList.add('is-hiddenPagination');\n      listLoader.classList.remove('is-hidden');\n      currentPage = pagination.pageNumber;\n      const queryResult = await getMoviesPopular(currentPage);\n      displayResult(queryResult.results);\n      listLoader.classList.add('is-hidden');\n      listPagination.classList.remove('is-hiddenPagination');\n    },\n  });\n}\n\nmovieList();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.body.addEventListener('click', function (e) {\n    if (e.target && e.target.classList.contains('libraryBtn')) {\n      const buttonText = e.target.textContent;\n      const movieId = e.target.closest('.modalBtnContainer');\n      let filmotekaWatchMovies = '';\n      const movieData = {\n        id: movieId.dataset.id,\n      };\n\n      if (buttonText === 'Add to watched') {\n        filmotekaWatchMovies =\n          JSON.parse(localStorage.getItem('filmotekaWatchMovies')) || [];\n      }\n      if (buttonText === 'Add to queue') {\n        filmotekaWatchMovies =\n          JSON.parse(localStorage.getItem('filmotekaQueueMovies')) || [];\n      }\n\n      const isMovieWatched = filmotekaWatchMovies.some(\n        filmotekaWatchMovies => filmotekaWatchMovies.id === movieData.id\n      );\n\n      if (!isMovieWatched) {\n        if (buttonText === 'Add to watched') {\n          filmotekaWatchMovies.push(movieData);\n          localStorage.setItem(\n            'filmotekaWatchMovies',\n            JSON.stringify(filmotekaWatchMovies)\n          );\n        }\n        if (buttonText === 'Add to queue') {\n          filmotekaWatchMovies.push(movieData);\n          localStorage.setItem(\n            'filmotekaQueueMovies',\n            JSON.stringify(filmotekaWatchMovies)\n          );\n        }\n\n        Notiflix.Notify.success('Successfully added to the List!');\n      } else {\n        Notiflix.Notify.info('This Movie is already added.');\n      }\n    }\n  });\n});\n\nasync function watchedListData(x) {\n  let watchedMoviesShow = '';\n  if (x === 0) {\n    watchedMoviesShow =\n      JSON.parse(localStorage.getItem('filmotekaWatchMovies')) || [];\n  }\n  if (x === 1) {\n    watchedMoviesShow =\n      JSON.parse(localStorage.getItem('filmotekaQueueMovies')) || [];\n  }\n  if (watchedMoviesShow.length === 0) {\n    Notiflix.Notify.info('No watch movies to display.');\n    return;\n  }\n\n  listLoader.classList.remove('is-hidden');\n  movieContainer.innerHTML = '';\n  for (const movie of watchedMoviesShow) {\n    try {\n      const searchResult = await getMovieDetails(movie.id);\n      displayResultLibrary([searchResult]);\n    } catch (error) {\n      console.error('Error fetching list:', error);\n    }\n  }\n  listLoader.classList.add('is-hidden');\n}\n\nlibraryList.addEventListener('click', () => {\n  watchedListData(0);\n});\n\nlibraryListQ.addEventListener('click', () => {\n  watchedListData(1);\n});\n\nlibraryListW.addEventListener('click', () => {\n  watchedListData(0);\n});\n","\nimport { upcoming } from \"./api\";\nimport {movieCardUpcoming} from './utils';\n\n\n\nconst upcomingList = document.getElementById('swiper-list');\n\n\nasync function upcomingMovies(){\n  try {\n    const data = await upcoming();\n    displayResult(data.results);\n  }catch(e) {\n\n  } finally {\n    var swiper = new Swiper('.mySwiper', {\n\n      pagination: {\n        el: '.swiper-pagination',\n      },\n      slidesPerView: 8,\n      spaceBetween: 18,\n      autoplay: {\n        delay: 3000,\n      },\n      breakpoints: {\n        // when window width is >= 320px\n        1159: {\n          slidesPerView: 8,\n        },\n        768: {\n          slidesPerView: 6,\n        },\n        1: {\n          slidesPerView: 2,\n        },\n      },\n    \n    });\n  }\n}\n\n\n\nfunction displayResult(dataResult) {\n  let finalResult = dataResult.map(result => {\n    return movieCardUpcoming(\n      result.id,\n      result.poster_path,\n      result.title,\n      result.release_date\n    );\n  });\n  upcomingList.innerHTML = finalResult.join('');\n}\n\n\nupcomingMovies();\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$b7ONl","$1RLhk","$4c6aab06649ec8ef$var$upcomingList","document","getElementById","$4c6aab06649ec8ef$var$upcomingMovies","finalResult","dataResult","data","upcoming","results","map","result","movieCardUpcoming","poster_path","title","release_date","innerHTML","join","e","Swiper","pagination","el","slidesPerView","spaceBetween","autoplay","delay","breakpoints","$ejkSG","$b8f9b7833fa37166$var$movieContainer","querySelector","$b8f9b7833fa37166$var$listLoader","$b8f9b7833fa37166$var$libraryList","$b8f9b7833fa37166$var$libraryListQ","$b8f9b7833fa37166$var$libraryListW","$b8f9b7833fa37166$var$listPagination","$b8f9b7833fa37166$var$currentPage","$b8f9b7833fa37166$var$displayResult","year","split","movieCard","genre_ids","$b8f9b7833fa37166$var$watchedListData","x","watchedMoviesShow","JSON","parse","localStorage","getItem","length","Notify","info","movie","classList","remove","searchResult","getMovieDetails","$b8f9b7833fa37166$var$displayResultLibrary","add","insertAdjacentHTML","error","console","$b8f9b7833fa37166$var$movieList","page","queryResult","getMoviesPopular","log","$b8f9b7833fa37166$var$setupPagination","total","limitedTotal","Math","min","$","dataSource","Array","from","_","i","pageSize","callback","pageNumber","total_results","addEventListener","body","target","contains","buttonText","textContent","movieId","closest","filmotekaWatchMovies","movieData","dataset","some","push","setItem","stringify","success","MovieController","API_KEY","BASE_URL","options","Notiflix","movieCardHere","movieContainer","listLoader","libraryList","libraryListQ","libraryListW","listPagination","currentPage","movieList","displayResult","setupPagination","displayResultLibrary","maxItems","isMovieWatched","watchedListData","upcomingList","upcomingMovies","swiper"],"version":3,"file":"index.d9a60fc6.js.map"}